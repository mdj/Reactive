#include "TMath.h"
#include "TLatex.h"
//"Global" variables:
TString histofile = "analyse_noise.root";
TCanvas * canvas;

///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
// Define colors:
enum colors { tk_darkgrey = 552, tk_lightgrey = 551, tk_red = 553 };

/////
void setupBasicLayout(TString canvasname, TCanvas * & thecanvas){
  setpawstyle();

  double tk_lightgrayscale = 0.6;
  if(! gROOT->GetColor(tk_lightgrey) )
    new TColor(tk_lightgrey,tk_lightgrayscale,tk_lightgrayscale,tk_lightgrayscale,"tk_lightgrey");
  else gROOT->GetColor(tk_lightgrey)->SetRGB(tk_lightgrayscale,tk_lightgrayscale,tk_lightgrayscale);

  double tk_darkgrayscale = 0.4;
  if(! gROOT->GetColor(tk_darkgrey) )
    new TColor(tk_darkgrey,tk_darkgrayscale,tk_darkgrayscale,tk_darkgrayscale,"tk_darkgrey");
  else gROOT->GetColor(tk_darkgrey)->SetRGB(tk_darkgrayscale,tk_darkgrayscale,tk_darkgrayscale);

  if(! gROOT->GetColor(tk_red) )
    new TColor(tk_red,1.0,0.0,0.0,"tk_red");
  else gROOT->GetColor(tk_red)->SetRGB(1.0,0.0,0.0);

  if (canvasname!="")
    thecanvas = new TCanvas(canvasname);

}
void mgleg()
{
   float x1[] = {1,2,3}; float y1[] = {4,7,6};
   float x2[] = {3,5,6}; float y2[] = {0,9,4};
   float x3[] = {7,8,9}; float y3[] = {1,2,4};
   float x4[] = {0,6,5}; float y4[] = {5,2,7};

   TGraph *gr1 = new TGraph(3,x1,y1); gr1->SetLineColor(1);
   TGraph *gr2 = new TGraph(3,x2,y2); gr2->SetLineColor(2);
   TGraph *gr3 = new TGraph(3,x3,y3); gr3->SetLineColor(3);
   TGraph *gr4 = new TGraph(3,x4,y4); gr4->SetLineColor(4);

   TMultiGraph *mg1 = new TMultiGraph();
   mg1->Add(gr1); mg1->Add(gr2);
   TMultiGraph *mg2 = new TMultiGraph();
   mg2->Add(gr3); mg2->Add(gr4);
   mg2->Add(mg1); // mg2 now contains gr1 gr2 gr3 and gr4

   mg2->Draw("AL*");

   TLegend *leg = BuilLegend(mg2,0.8,0.8,1,1,"hello");
   leg->Draw();
}

TLegend *BuilLegend(TMultiGraph *mg,
                    Double_t x1, Double_t y1, Double_t x2, Double_t y2,
                    char* title)
{
   TLegend *leg = new TLegend(x1, y1, x2, y2, title);
   TList* grlist;
   grlist = mg->GetListOfGraphs();
   printf("%d\n",grlist->GetSize());
   TIter next(grlist);
   TObject *obj;
   TGraph *gr;
 
   while ((obj = next())) {
        gr=(TGraph*)obj;
        leg->AddEntry(obj,gr->GetName(),"lp");   
   }
 
   return leg;
}


void graphShade() {
   TCanvas *c1 = new TCanvas("c1",
      "A Simple Graph Example",200,10,700,500);

   c1->SetGrid();
   c1->DrawFrame(0,0,2.2,12);
   
   const Int_t n = 200;
   Double_t x[n], y[n],ymin[n], ymax[n];
   Int_t i;
   for (i=0;i<n;i++) {
     x[i] = 0.1+i*0.1;
     ymax[i] =  10 * (i>10? 1 : 0) *  (i<15? 1 : 0) ;
     ymin[i] =  5 * (i>10? 1 : 0) *  (i<15? 1 : 0);
     y[i] = 9*sin(x[i]+0.15);
     y[10]=10.0;
     

   }
   TGraph *grmin = new TGraph(n,x,ymin);
   TGraph *grmax = new TGraph(n,x,ymax);
   TGraph *gr    = new TGraph(n,x,y);
   TGraph *grshade = new TGraph(2*n);
   for (i=0;i<n;i++) {
      grshade->SetPoint(i,x[i],ymax[i]);
      grshade->SetPoint(n+i,x[n-i-1],ymin[n-i-1]);
   }
   grshade->SetFillStyle(3013);
   grshade->SetFillColor(16);
   grshade->Draw("f");
   grmin->Draw("l");
   grmax->Draw("l");
   gr->SetLineWidth(4);
   gr->SetMarkerColor(4);
   gr->SetMarkerStyle(21);
   gr->Draw("CP");
}
void Tkeff(){
  //  Double_t keff[5] ={0.99294, 0.99257,0.99208,0.99230,0.99186};
  //  Double_t keff_e[5]={0.00028, 0.00028,0.00031,0.00026,0.00025};
  //  Double_t T[5]={620,666,712,758,804};
  Double_t keff[5] ={0.99251,0.99236,0.99216,0.99191,0.99161};
  Double_t keff_e[5]={0.00012,0.00012,0.00013,0.00012,0.00012};
  Double_t keff_norm[5] ={0};
  Double_t keff_norm_e[5]={0};
  Double_t T[5]={620,677.5,735,792.5,850};
  Double_t T_e[5]={0,0,0,0,0};

  
  //700!!!
  for (Int_t i=0;i<5;i++) {
    keff_norm[i] = (keff[i]-(keff[1]+keff[2])*0.5)/0.00281;
    keff_norm_e[i] =  abs(keff_norm[i]/keff[i]*keff_e[i]);
    std::cout<<keff_norm[i]<<" "<<keff_norm_e[i]<<std::endl;
  }
    
  gr   = new TGraphErrors(5,T,keff_norm,T_e,keff_norm_e);                                                       
  //  gr->GetYaxis()->SetRangeUser(0.99,0.995);

                                                                                                                                    
  gr->SetTitle(";Temperature [#circC] ;Reactivity [\$]");
//flux->GetYaxis()->SetLabelOffset(0.4);                                                                                           
//flux->GetXaxis()->SetLabelSize(0.04);                                                                                            
//   flux->SetTitleOffset(0);                                                                                                      
//      flux->GetYaxis()->SetTitleOffset(0.4);                                                                                     
 gr->GetXaxis()->SetTitleOffset(1.2);
 gr->GetYaxis()->SetTitleOffset(1.5);
 //   flux->GetYaxis()->SetTitleSize(0.8);                                                                                          
 gr->GetXaxis()->SetTitleSize(0.04);
 //   c1->SetLogx();                                                                                                                
 //   c1->SetLogy();                                                                                                                
 // gr->SetLineColor(1);
 gr->SetMarkerStyle(2); //2 27 33 44                                                                                                
 // gr->SetMarkerColor(2);
 gr->SetMarkerSize(3.);
 gr->SetLineWidth(2.);
 gr->SetLineColor(1.);

  gr->Fit("pol2");
  gr->Draw("AP");
  c1->Print("T_keff.pdf");

}

void cold_flux() {
//  Double_t  ebins[7] =     {5.00000E-09,  2.00000E-08,  1.00000E-07,  4.00000E-07,  1.00000E+00,  3.00000E+03};
//  Double_t  eebins[7] =     {0, 0, 0, 0, 0, 0, 0 };
//  Double_t  flux[7] =  {  2.08389E-06,   5.81915E-06, 1.05337E-05,  3.92991E-06, 9.87970E-05,  4.09725E-06,1.25261E-04}; 
//  Double_t  eflux[7] =  { 0.0227, 0.0148, 0.0112 , 0.0208 , 0.0053  , 0.0243, 0.0045}; 

  Double_t bins[162] =  { 1.00000E-11, 1.25893E-11, 1.58489E-11, 1.99526E-11, 2.51189E-11, 3.16228E-11, 3.98107E-11, 5.01187E-11, 6.30957E-11, 7.94328E-11, 1.00000E-10, 1.25893E-10, 1.58489E-10, 1.99526E-10, 2.51189E-10, 3.16228E-10, 3.98107E-10, 5.01187E-10, 6.30957E-10, 7.94328E-10, 1.00000E-09, 1.25893E-09, 1.58489E-09, 1.99526E-09, 2.51189E-09, 3.16228E-09, 3.98107E-09, 5.01187E-09, 6.30957E-09, 7.94328E-09, 1.00000E-08, 1.25893E-08, 1.58489E-08, 1.99526E-08, 2.51189E-08, 3.16228E-08, 3.98107E-08, 5.01187E-08, 6.30957E-08, 7.94328E-08, 1.00000E-07, 1.25893E-07, 1.58489E-07, 1.99526E-07, 2.51189E-07, 3.16228E-07, 3.98107E-07, 5.01187E-07, 6.30957E-07, 7.94328E-07, 1.00000E-06, 1.25893E-06, 1.58489E-06, 1.99526E-06, 2.51189E-06, 3.16228E-06, 3.98107E-06, 5.01187E-06, 6.30957E-06, 7.94328E-06, 1.00000E-05, 1.25893E-05, 1.58489E-05, 1.99526E-05, 2.51189E-05, 3.16228E-05, 3.98107E-05, 5.01187E-05, 6.30957E-05, 7.94328E-05, 1.00000E-04, 1.25893E-04, 1.58489E-04, 1.99526E-04, 2.51189E-04, 3.16228E-04, 3.98107E-04, 5.01187E-04, 6.30957E-04, 7.94328E-04, 1.00000E-03, 1.25893E-03, 1.58489E-03, 1.99526E-03, 2.51189E-03, 3.16228E-03, 3.98107E-03, 5.01187E-03, 6.30957E-03, 7.94328E-03, 1.00000E-02, 1.25893E-02, 1.58489E-02, 1.99526E-02, 2.51189E-02, 3.16228E-02, 3.98107E-02, 5.01187E-02, 6.30957E-02, 7.94328E-02, 1.00000E-01, 1.25893E-01, 1.58489E-01, 1.99526E-01, 2.51189E-01, 3.16228E-01, 3.98107E-01, 5.01187E-01, 6.30957E-01, 7.94328E-01, 1.00000E+00, 1.25893E+00, 1.58489E+00, 1.99526E+00, 2.51189E+00, 3.16228E+00, 3.98107E+00, 5.01187E+00, 6.30957E+00, 7.94328E+00, 1.00000E+01, 1.25893E+01, 1.58489E+01, 1.99526E+01, 2.51189E+01, 3.16228E+01, 3.98107E+01, 5.01187E+01, 6.30957E+01, 7.94328E+01, 1.00000E+02, 1.25893E+02, 1.58489E+02, 1.99526E+02, 2.51189E+02, 3.16228E+02, 3.98107E+02, 5.01187E+02, 6.30957E+02, 7.94328E+02, 1.00000E+03, 1.25893E+03, 1.58489E+03, 1.99526E+03, 2.51189E+03, 3.16228E+03, 3.98107E+03, 5.01187E+03, 6.30957E+03, 7.94328E+03, 1.00000E+04, 1.25893E+04, 1.58489E+04, 1.99526E+04, 2.51189E+04, 3.16228E+04, 3.98107E+04, 5.01187E+04, 6.30957E+04, 7.94328E+04, 1.00000E+05};


Double_t  flux[162] =  {
1.50757E-09, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 6.77252E-10, 0.00000E+00, 0.00000E+00, 1.14190E-09, 2.89560E-09, 1.21159E-09, 3.86571E-09, 2.47598E-09, 1.06287E-08, 1.24756E-08, 9.89713E-09, 3.48418E-08, 3.00281E-08, 4.90297E-08, 8.03091E-08, 1.07111E-07, 1.42087E-07, 1.86990E-07, 2.24363E-07, 3.20938E-07, 3.83352E-07, 4.85039E-07, 6.37996E-07, 7.65182E-07, 8.83131E-07, 1.09577E-06, 1.09319E-06, 1.32220E-06, 1.34289E-06, 1.50139E-06, 1.63851E-06, 1.71594E-06, 1.68438E-06, 1.42573E-06, 1.23960E-06, 9.20236E-07, 7.96864E-07, 6.04790E-07, 5.43013E-07, 4.94491E-07, 5.61967E-07, 5.62919E-07,6.28094E-07, 5.85911E-07, 7.20585E-07, 7.37992E-07,8.29483E-07, 7.95308E-07, 8.92484E-07, 8.89593E-07,9.59207E-07, 9.94838E-07, 1.06359E-06, 1.04249E-06,1.07759E-06, 1.17365E-06, 1.12931E-06, 1.24018E-06,1.34089E-06, 1.20579E-06, 1.30808E-06, 1.26264E-06,1.43867E-06, 1.19944E-06, 1.23582E-06, 1.27718E-06,1.43062E-06, 1.28262E-06, 1.35213E-06, 1.28967E-06,1.36152E-06, 1.44800E-06, 1.36363E-06, 1.37619E-06,1.46343E-06, 1.22873E-06, 1.44507E-06, 1.72281E-06,1.53798E-06, 1.52127E-06, 1.76289E-06, 1.55790E-06,1.60709E-06, 1.09724E-06, 1.12808E-06, 1.46777E-06,1.68608E-06, 1.77247E-06, 6.57021E-06, 1.93150E-06,1.24162E-06, 1.85994E-06, 1.86216E-06, 2.69110E-06,2.60318E-06, 2.36884E-06, 2.99630E-06, 2.71450E-06,2.26546E-06, 4.39800E-06, 2.44686E-06, 1.43544E-06,1.72799E-06, 1.33383E-06, 8.63710E-07, 6.64414E-07,5.36170E-07, 5.17010E-07, 3.79934E-07, 3.52376E-07,2.34265E-07, 2.58129E-07, 2.08751E-07, 1.47317E-07,1.14623E-07, 8.29951E-08, 8.61464E-08, 5.66015E-08,4.66496E-08, 7.56882E-08, 5.42524E-08, 6.45581E-08,5.91402E-08, 5.83615E-08, 4.13814E-08, 2.27402E-08,1.61927E-08, 9.73236E-09, 4.86802E-09, 1.63411E-09,3.31953E-09, 0.00000E+00, 0.00000E+00, 0.00000E+00,0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,0.00000E+00, 0.00000E+00 }; //removed integral			



//  gr  = new TGraphErrors(7,ebins,flux,eebins,eflux);
  gr  = new TGraph(162,bins,flux);

  gr->Draw("apl");

  //  gr->SetTitle("Flux vs impact - average over lower beamlines (y<0);Relative impact on other beamlines [%];Integrated Flux (central 
 gr->SetTitle("Temperature [\degree C] ;#k_eff ");
   //flux->GetYaxis()->SetLabelOffset(0.4);
   //flux->GetXaxis()->SetLabelSize(0.04);
   //   flux->SetTitleOffset(0);
   //      flux->GetYaxis()->SetTitleOffset(0.4);
   gr->GetXaxis()->SetTitleOffset(1.2);
   //   flux->GetYaxis()->SetTitleSize(0.8);
   gr->GetXaxis()->SetTitleSize(0.04);
   //   c1->SetLogx();
   //   c1->SetLogy();
   gr->SetLineColor(1);
   gr->SetMarkerStyle(2); //2 27 33 44
   gr->SetMarkerColor(2);
   gr->SetMarkerSize(2.);

c1->Print("ucn_flux.pdf");
c1->Print("ucn_flux.eps");
c1->Print("ucn_flux.png");

    }


void impact_vs_flux() {
    //impact[6] = {95.4,99.1,100.0,,,};
  Double_t  impact[6] =     {95.4,          97.1,           98.2,    99.1,           99.6, 100.0}; //find 'averages i UCN.ods
  //ORG Estimate  Double_t  flux[6] =  {1.9169e13,15878227726135, 13308730526383, 9.86e12, 8915076681781 , 2.76e11}; 
  Double_t  flux[6] =  {1.9169e13,15878227726135, 13308730526383, 1.1014e13, 8915076681781 , 2.4878e11};  //find F88,G8,H88
  //  Double_t  flux[6] =  {large,2_3,2_2,down_75,2_1,down_15
  //  gr   = new TGraph(6,impact,flux);
  gr   = new TGraph(6,flux,impact);
gr->GetYaxis()->SetRangeUser(90.0,103.0);

  gr->Draw("apl");

  //  gr->SetTitle("Flux vs impact - average over lower beamlines (y<0);Relative impact on other beamlines [%];Integrated Flux (central 
 gr->SetTitle("Flux vs impact - average over lower beamlines (y<0);Integrated Flux (central in tube)  [n/cm^2/s];Relative impact on other beamlines [%] ");
   //flux->GetYaxis()->SetLabelOffset(0.4);
   //flux->GetXaxis()->SetLabelSize(0.04);
   //   flux->SetTitleOffset(0);
   //      flux->GetYaxis()->SetTitleOffset(0.4);
   gr->GetXaxis()->SetTitleOffset(1.2);
   //   flux->GetYaxis()->SetTitleSize(0.8);
   gr->GetXaxis()->SetTitleSize(0.04);
   gr->SetLineColor(1);
   gr->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   gr->SetMarkerColor(2);
   gr->SetMarkerSize(2.);

c1->Print("ucn_impact_vs_flux.pdf");
c1->Print("ucn_impact_vs_flux.eps");
c1->Print("ucn_impact_vs_flux.png");

    }


void impact_vs_flux_cold() {
  Double_t  impact[6] =     {95.87, 97.40, 98.45,  99.23,99.58, 100.05};
  Double_t  flux[6] =  {1.9169e13,15878227726135, 13308730526383, 1.1014e13, 8915076681781 , 2.4878e11}; 
  gr   = new TGraph(6,flux,impact);
gr->GetYaxis()->SetRangeUser(90.0,103.0);

  gr->Draw("apl");


 gr->SetTitle("Flux vs impact - average over lower beamlines (y<0);Integrated Flux (central in tube)  [n/cm^2/s];Relative impact on other beamlines [%] - cold");
   gr->GetXaxis()->SetTitleOffset(1.2);
   gr->GetXaxis()->SetTitleSize(0.04);
   gr->SetLineColor(1);
   gr->SetMarkerStyle(2); 
   gr->SetMarkerColor(2);
   gr->SetMarkerSize(2.);

c1->Print("ucn_impact_vs_flux_cold.pdf");
c1->Print("ucn_impact_vs_flux_cold.eps");
c1->Print("ucn_impact_vs_flux_cold.png");

    }


void impact_vs_flux_interm() {
  Double_t  impact[6] =     {95.65, 97.24, 98.28,99.10, 99.73, 99.99};
  Double_t  flux[6] =  {1.9169e13,15878227726135, 13308730526383, 1.1014e13, 8915076681781 , 2.4878e11}; 
  gr   = new TGraph(6,flux,impact);
gr->GetYaxis()->SetRangeUser(90.0,103.0);

  gr->Draw("apl");

 
 gr->SetTitle("Flux vs impact - average over lower beamlines (y<0);Integrated Flux (central in tube)  [n/cm^2/s];Relative impact on other beamlines [%] - intermediate");
   gr->GetXaxis()->SetTitleOffset(1.2);
   gr->GetXaxis()->SetTitleSize(0.04);
   gr->SetLineColor(1);
   gr->SetMarkerStyle(2); 
   gr->SetMarkerColor(2);
   gr->SetMarkerSize(2.);

c1->Print("ucn_impact_vs_flux_interm.pdf");
c1->Print("ucn_impact_vs_flux_interm.eps");
c1->Print("ucn_impact_vs_flux_interm.png");

    }



void impact_vs_flux_thermal() {
  Double_t  impact[6] =     {94.59, 96.58, 97.81, 98.85,99.49, 99.93};


  Double_t  flux[6] =  {1.9169e13,15878227726135, 13308730526383, 1.1014e13, 8915076681781 , 2.4878e11}; 
  gr   = new TGraph(6,flux,impact);
gr->GetYaxis()->SetRangeUser(90.0,103.0);

  gr->Draw("apl");

 
 gr->SetTitle("Flux vs impact - average over lower beamlines (y<0);Integrated Flux (central in tube)  [n/cm^2/s];Relative impact on other beamlines [%] - thermal ");
   gr->GetXaxis()->SetTitleOffset(1.2);
   gr->GetXaxis()->SetTitleSize(0.04);
   gr->SetLineColor(1);
   gr->SetMarkerStyle(2); 
   gr->SetMarkerColor(2);
   gr->SetMarkerSize(2.);

c1->Print("ucn_impact_vs_flux_thermal.pdf");
c1->Print("ucn_impact_vs_flux_thermal.eps");
c1->Print("ucn_impact_vs_flux_thermal.png");

    }



void impact_vs_flux_binned() {
  Double_t  impact_i[6] =     {95.65, 97.24, 98.28,99.10, 99.73, 99.99};
  Double_t  impact_t[6] =     {94.59, 96.58, 97.81, 98.85,99.49, 99.93};
  Double_t  impact_c[6] =     {95.87, 97.40, 98.45,  99.23,99.58, 100.05};
  Double_t  impact_av[6] =     {95.4,          97.1,           98.2,    99.1,       99.6, 100.0}; 


  Double_t  flux[6] =  {1.9169e13,15878227726135, 13308730526383, 1.1014e13, 8915076681781 , 2.4878e11}; 
  gr_c   = new TGraph(6,flux,impact_c);
  gr_i   = new TGraph(6,flux,impact_i);
  gr_t   = new TGraph(6,flux,impact_t);
  gr_av   = new TGraph(6,flux,impact_av);



gr_c->GetYaxis()->SetRangeUser(90.0,103.0);
gr_i->GetYaxis()->SetRangeUser(90.0,103.0);
gr_t->GetYaxis()->SetRangeUser(90.0,103.0);
gr_av->GetYaxis()->SetRangeUser(90.0,103.0);
/*
  gr_c->Draw("apl");
  gr_i->Draw("apl");
  gr_t->Draw("apl");
  gr_av->Draw("apl");

*/
 gr_c->SetTitle("Flux vs impact - average over lower beamlines (y<0);Integrated Flux (central in tube)  [n/cm^2/s];Relative impact on other beamlines [%]");
 gr_i->SetTitle("Flux vs impact - average over lower beamlines (y<0);Integrated Flux (central in tube)  [n/cm^2/s];Relative impact on other beamlines [%]");
 gr_t->SetTitle("Flux vs impact - average over lower beamlines (y<0);Integrated Flux (central in tube)  [n/cm^2/s];Relative impact on other beamlines [%]");
 gr_av->SetTitle("Flux vs impact - average over lower beamlines (y<0);Integrated Flux (central in tube)  [n/cm^2/s];Relative impact on other beamlines [%]");
   gr_c->GetXaxis()->SetTitleOffset(1.2);
   gr_c->GetXaxis()->SetTitleSize(0.04);
   gr_c->SetLineColor(4);
   gr_c->SetMarkerStyle(2); 
   gr_c->SetMarkerColor(4);
   gr_c->SetMarkerSize(2.);
   gr_c->SetLineWidth(2.);

   gr_i->GetXaxis()->SetTitleOffset(1.2);
   gr_i->GetXaxis()->SetTitleSize(0.04);
   gr_i->SetLineColor(3);
   gr_i->SetMarkerStyle(3); 
   gr_i->SetMarkerColor(3);
   gr_i->SetMarkerSize(2.);
   gr_i->SetLineWidth(2.);

   gr_t->GetXaxis()->SetTitleOffset(1.2);
   gr_t->GetXaxis()->SetTitleSize(0.04);
   gr_t->SetLineColor(2);
   gr_t->SetMarkerStyle(4); 
   gr_t->SetMarkerColor(2);
   gr_t->SetMarkerSize(2.);
   gr_t->SetLineWidth(2.);

   gr_av->GetXaxis()->SetTitleOffset(1.2);
   gr_av->GetXaxis()->SetTitleSize(0.04);
   gr_av->SetLineColor(1);
   gr_av->SetMarkerStyle(1); 
   gr_av->SetMarkerColor(2);
   gr_av->SetMarkerSize(2.);
   gr_av->SetLineWidth(2.);

  TMultiGraph *gr = new TMultiGraph();
    gr->Add(gr_c);
    gr->Add(gr_i);
    gr->Add(gr_t);
    gr->Add(gr_av);

 gr->SetTitle("Flux vs impact - average over lower beamlines (y<0);Integrated Flux (central in tube)  [n/cm^2/s];Relative impact on other beamlines [%]");

   TLegend* l = new TLegend(0.68,0.68,0.88,0.88);
   l->AddEntry(gr_c,"Cold","p");
   l->AddEntry(gr_i,"Intermediate","p");
   l->AddEntry(gr_t,"Thermal","p");
   l->AddEntry(gr_av,"All (0-100 meV)","l");

  gr->Draw("apl");

   l->SetFillColor(0);
   l->SetLineColor(1);

   l->Draw();

c1->Print("ucn_impact_vs_flux_binned.pdf");
c1->Print("ucn_impact_vs_flux_binned.eps");
c1->Print("ucn_impact_vs_flux_binned.png");

    }

void beam(){
  Double_t pos[6]    = {-33.5,-42.5,-50.0,-45,-40,-37.5};
  Double_t impact[6] = {95.4,99.1,100.0,99.6,98.2,97.1};
  beamgr   = new TGraph(6,pos,impact);




  TMultiGraph *flux = new TMultiGraph();
  
  flux->Add(beamgr);

  TCanvas *c1=new TCanvas;
  flux->Draw("ap");   

  //   flux->GetXaxis()->SetTitle("y position   [cm]");
  //   flux->GetYaxis()->SetTitle("[%]  ");
   //flux->GetYaxis()->SetTitle("Flux ratio");
  //   flux->SetTitle("Flux relative to baseline - average over lower beamlines (neg y)");

   flux->SetTitle("Flux relative to baseline - average over lower beamlines (y<0);y position of tube 'roof' [cm]; [%]");
   //flux->GetYaxis()->SetLabelOffset(0.4);
   //flux->GetXaxis()->SetLabelSize(0.04);
   //   flux->SetTitleOffset(0);
   //      flux->GetYaxis()->SetTitleOffset(0.4);
   flux->GetXaxis()->SetTitleOffset(1.2);
   //   flux->GetYaxis()->SetTitleSize(0.8);
   flux->GetXaxis()->SetTitleSize(0.04);
   beamgr->SetLineColor(1);
   beamgr->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   beamgr->SetMarkerColor(2);
   beamgr->SetMarkerSize(2.);



  
c1->Print("ucn_impact_in_y.eps");
c1->Print("ucn_impact_in_y.png");
c1->Print("ucn_impact_in_y.pdf");

}


///////////////////////////////////////////////////////////////////////////////////

void flux(){
  Double_t bins[23] = {-3.67E+01,-4.25E+01,-4.75E+01,-5.25E+01,-5.75E+01,-6.25E+01,-6.75E+01,-7.25E+01,-7.75E+01,-9.0E+01,-2.27E+01,-1.97E+01,-1.67E+01,-1.37E+01,-1.185E+01,-9.40E+00,-7.2E+00,-5.645E+00,-2.90E+01,-4.00000E+00,-2.50000E+00,-1.00000E+00,0.00000E+00};

  Double_t bins75[22] = {-3.67E+01,-4.75E+01,-5.25E+01,-5.75E+01,-6.25E+01,-7.25E+01,-7.75E+01,-9.0E+01,-2.27E+01,-1.97E+01,-1.67E+01,-1.37E+01,-1.185E+01,-9.40E+00,-7.2E+00,-5.645E+00,-2.90E+01,-4.00000E+00,-2.50000E+00,-1.00000E+00,0.00000E+00,-5.50000E+01};

  Double_t bins15[24] = {-3.67E+01,-4.25E+01,-4.75E+01,-5.25E+01,-5.75E+01,-6.25E+01,-6.75E+01,-7.25E+01,-7.75E+01,-9.0E+01,-2.27E+01,-1.97E+01,-1.67E+01,-1.37E+01,-1.185E+01,-9.40E+00,-7.2E+00,-5.645E+00,-2.90E+01,-4.00000E+00,-2.50000E+00,-1.00000E+00,0.00000E+00,-6.50000E+01};

  Double_t be[23]   = {2.52039E-02,1.84560E-02,1.41197E-02,1.08362E-02,8.36615E-03,6.49477E-03,5.08447E-03,4.00391E-03,3.16386E-03,1.85179E-03,4.63351E-02,4.87770E-02,4.82866E-02,4.36030E-02,3.83784E-02,2.81429E-02,1.66088E-02,9.40514E-03,3.68060E-02,3.84748E-03,5.92244E-04,1.63853E-04,1.19994E-04};

  Double_t be_i[23]   = {5.65102E-03,4.17348E-03,3.19601E-03,2.46810E-03,1.89678E-03,1.48222E-03,1.15795E-03,9.10566E-04,7.19591E-04,4.22085E-04,9.93208E-03,1.03169E-02,1.00572E-02,8.94157E-03,7.81031E-03,5.64826E-03,3.25204E-03,1.74955E-03,8.09065E-03,5.37971E-04,3.06091E-05,4.18215E-06,2.61129E-06};

  Double_t be_c[23]   = {5.08927E-04,3.91925E-04,3.10835E-04,2.43866E-04,1.94060E-04,1.53305E-04,1.19047E-04,9.38167E-05,7.49360E-05,4.45853E-05,8.00861E-04,8.22674E-04,7.96414E-04,7.16534E-04,6.39224E-04,5.07690E-04,3.72721E-04,2.91952E-04,6.84769E-04,8.56606E-05,1.26016E-06,8.09015E-08,3.16074E-08};

  /* v1
  Double_t real[23]   = {8.55821E-03,4.36522E-03,4.63392E-04,1.38332E-05,4.92114E-07,5.09417E-08,4.01748E-09,1.37562E-09,1.25118E-08,7.69233E-09,2.60890E-03,2.08377E-03,2.65172E-03,4.35315E-03,7.96865E-03,8.34921E-03,4.63049E-03,3.96645E-03,5.55441E-03,2.16259E-03,,3.62203E-041.02039E-04,7.49483E-05};

  Double_t real_i[23]   = {2.63557E-03,9.57746E-04,6.25054E-05,6.20585E-07,6.61309E-09,0.00000E+00,0.00000E+00,0.00000E+00,0.00000E+00,0.00000E+00,1.11661E-02,1.14925E-02,1.27354E-02,1.44595E-02,1.48423E-02,8.99158E-03,4.38797E-03,3.24354E-03,8.68441E-03,7.84759E-04,3.83144E-05,5.11991E-06,2.35878E-06};

  Double_t real_c[23]   = {3.23597E-04,1.29024E-04,1.21116E-05,6.17568E-08,1.14749E-10,0.00000E+00,0.00000E+00,0.00000E+00,0.00000E+00,0.00000E+00,5.54406E-03,6.19420E-03,6.81286E-03,7.12403E-03,6.44580E-03,2.71918E-03,1.32581E-03,8.88472E-04,2.53947E-03,1.28867E-04,1.74804E-06,1.44513E-07,4.68652E-08};
  */

  //std + 4 f5 hwere the sun don't shine
  Double_t real_c[23]   = { 3.23634E-04,1.32470E-04,1.23260E-05,3.22732E-08,0.00000E+00,0.00000E+00,0.00000E+00,0.00000E+00,0.00000E+00,0.00000E+00,5.56009E-03,6.24482E-03,6.85031E-03,7.15572E-03,6.48485E-03,4.70526E-04,7.07860E-05,6.73392E-05,2.54600E-03,2.55753E-05,3.06348E-07,1.86365E-08,6.07840E-09};
  Double_t real_i[23]   = {2.67793E-03,9.62116E-04,6.28482E-05,4.64696E-07,1.85862E-09,0.00000E+00,0.00000E+00,0.00000E+00,0.00000E+00,0.00000E+00,1.11620E-02,1.14536E-02,1.27727E-02,1.45432E-02,1.50540E-02,3.84454E-03,9.72589E-04,9.55953E-04,8.69795E-03,3.45563E-04,2.12500E-05,2.56604E-06,1.40277E-06};
  Double_t real[23]   = {8.58553E-03,4.35386E-03,4.69541E-04,1.30730E-05,3.35495E-07,1.23988E-08,0.00000E+00,2.22991E-08,2.50923E-08,0.00000E+00,2.59353E-03,2.05803E-03,2.67243E-03,4.55532E-03,8.78742E-03,1.40927E-02,5.77162E-03,5.60730E-03,5.59159E-03,2.74551E-03,4.30282E-04,1.14046E-04,7.84644E-05};



  Double_t large_c[23]   = {2.04490E-04,1.00597E-04,6.56584E-05,4.70622E-05,3.57048E-05,6.09115E-06,4.64236E-08,1.65954E-09,0.00000E+00,0.00000E+00,2.37028E-03,2.03473E-03,2.64915E-03,4.49377E-03,8.67919E-03,1.39875E-02,5.72419E-03,5.54667E-03,3.68078E-03,6.65305E-05,3.25448E-07,2.36264E-08,6.68231E-09};
  Double_t large_i[23]   = {9.29672E-04,4.31542E-04,3.09809E-04,2.31989E-04,1.85791E-04,4.22490E-05,4.03363E-07,1.20935E-09,0.00000E+00,0.00000E+00,1.02833E-02,1.09790E-02,1.24165E-02,1.42673E-02,1.46932E-02,3.78513E-03,9.74021E-04,9.34735E-04,6.03230E-03,3.07560E-04,2.02201E-05,2.66823E-06,1.67081E-06};
  Double_t large[23]     = {1.91665E-03,1.44954E-03,1.16000E-03,9.32952E-04,8.00425E-04,2.61902E-04,8.92974E-06,3.61081E-07,3.75800E-08,1.54398E-08,5.16165E-03,5.93634E-03,6.62363E-03,6.99199E-03,6.36168E-03,4.71970E-04,7.50725E-05,7.34292E-05,1.84654E-03,1.15977E-03,4.23274E-04,1.14976E-04,7.88259E-05};
  
  //nb: no tally 14, 64. removed, also from bin75. Added in the end: f5:25. Note spectra in the center available in tally:  35
  //wrong ORDER!!! cold is thermal!
  Double_t down75_c[22]     = { 6.58862E-03,9.83933E-04,7.89942E-04,6.31639E-04,5.32760E-04,3.26477E-05,1.23517E-06,3.94453E-08,2.56699E-03,2.06562E-03,2.65548E-03,4.53100E-03,8.80229E-03,1.42430E-02,5.92214E-03,4.93274E-03,5.20147E-03,6.39289E-05,0.00000E+00,5.69038E-08,1.27331E-08,3.80469E-05};
  Double_t down75_i[22]     = { 2.16435E-03,2.04947E-04,1.58852E-04,1.24701E-04,1.01099E-04,2.28287E-06,4.64091E-08,6.56703E-10,1.10080E-02,1.14174E-02,1.26986E-02,1.45371E-02,1.49503E-02,3.88787E-03,1.36229E-03,2.44106E-03,8.20161E-03,5.41793E-04,0.00000E+00,3.56502E-06,1.63758E-06,1.39888E-04};
  Double_t down75[22]       = { 2.84612E-04,6.26023E-05,4.47687E-05,3.36499E-05,2.53231E-05,2.69535E-07,2.31394E-09,0.00000E+00,5.48647E-03,6.15131E-03,6.80224E-03,7.14367E-03,6.49353E-03,4.87817E-04,2.02393E-04,5.49977E-04,2.40686E-03,2.33565E-03,0.00000E+00,1.06902E-04,7.74002E-05,7.04270E-04};
					
  //23 f4 +f4:where the sun don't shine +  f25: central					
  Double_t down15_c[24]     = {3.22235E-04,1.29271E-04,1.31981E-05,6.71511E-08,1.07701E-07,2.99638E-08,3.51051E-08,6.39253E-08,3.21251E-09,0.00000E+00,5.53172E-03,6.19806E-03,6.78494E-03,7.15950E-03,6.49435E-03,4.78992E-04,7.08888E-05,6.79821E-05,2.52532E-03,1.38076E-07,2.60192E-05,3.01357E-07,2.21462E-08,1.20368E-08};
  Double_t down15_i[24]     = {2.60732E-03,9.41689E-04,6.10979E-05,1.62050E-06,1.13878E-06,1.06274E-06,6.81531E-07,8.32734E-07,3.48418E-07,6.49939E-09,1.11552E-02,1.15100E-02,1.27245E-02,1.45392E-02,1.50237E-02,3.86688E-03,9.81816E-04,9.56646E-04,8.65889E-03,3.60538E-04,1.90497E-05,2.42440E-06,1.54641E-06, 1.05628E-06};
  Double_t down15[24]     = {8.47365E-03,4.28735E-03,4.46900E-04,2.87248E-05,2.52495E-05,2.10317E-05,1.78886E-05,1.71951E-05,6.01237E-06,1.24649E-07,2.59687E-03,2.06762E-03,2.65339E-03,4.51823E-03,8.83521E-03,1.41883E-02,5.81393E-03,5.65085E-03,5.51401E-03,2.74327E-03,4.25246E-04,1.18203E-04,8.59449E-05,1.87326E-05};
									

  Double_t be_scaled[23]   = {0};
  Double_t real_scaled[23] = {0};
  Double_t real_scaled_int[23] = {0};
  Double_t be_scaled_int[23] = {0};
  Double_t large_scaled_int[23] = {0};
  Double_t down75_scaled_int[23] = {0};
  Double_t down15_scaled_int[24] = {0};

  for (Int_t i=0;i<23;i++) {
    be_scaled[i]=1.248439E16*be[i];
    real_scaled[i]=1.248439E16*real[i];
    real_scaled_int[i]=1.248439E16*(real_c[i]+real_i[i]+real[i]);
    be_scaled_int[i]=1.248439E16*(be_c[i]+be_i[i]+be[i]);
    large_scaled_int[i]=1.248439E16*(large_c[i]+large_i[i]+large[i]);
    std::cout<<" i "<<i<<" "<<"bins "<<bins[i]<<"   "<<large_c[i]<<" "<<large_i[i]<<" "<<large[i]<<" "<<(large_c[i]+large_i[i]+large[i])<<" "<<large_scaled_int[i]<<std::endl;
  }



  for (Int_t i=0;i<22;i++) {
    down75_scaled_int[i]=1.248439E16*(down75_c[i]+down75_i[i]+down75[i]);
    std::cout<<" i "<<i<<" "<<"bins75 "<<bins75[i]<<"   "<<down75_c[i]<<" "<<down75_i[i]<<" "<<down75[i]<<" "<<(down75_c[i]+down75_i[i]+down75[i])<<" "<<down75_scaled_int[i]<<std::endl;
  }


  for (Int_t i=0;i<24;i++) {
    down15_scaled_int[i]=1.248439E16*(down15_c[i]+down15_i[i]+down15[i]);
    std::cout<<" i "<<i<<" "<<"bins15 "<<bins15[i]<<"   "<<down15_c[i]<<" "<<down15_i[i]<<" "<<down15[i]<<" "<<(down15_c[i]+down15_i[i]+down15[i])<<" "<<down15_scaled_int[i]<<std::endl;
  }






  begr   = new TGraph(23,bins,be_scaled_int);
  //  begr   = new TGraph(23,bins,be_scaled);
  realgr = new TGraph(23,bins,real_scaled_int);
  //  realgr = new TGraph(23,bins,real_scaled);

  largegr = new TGraph(23,bins,large_scaled_int);
  down75gr = new TGraph(22,bins75,down75_scaled_int);
  down15gr = new TGraph(24,bins15,down15_scaled_int);



  TMultiGraph *flux = new TMultiGraph();
  TMultiGraph *flux2 = new TMultiGraph();
  TMultiGraph *flux3 = new TMultiGraph();
  TMultiGraph *flux4 = new TMultiGraph();
  TMultiGraph *flux5 = new TMultiGraph();
  
  //  flux->Add(begr);
  flux->Add(realgr);
  flux->Add(largegr);

  //  flux2->Add(begr);
  flux2->Add(realgr);
  flux2->Add(down75gr);


  //  flux3->Add(begr);
  flux3->Add(realgr);
  flux3->Add(down15gr);

  //  flux4->Add(begr);
  flux4->Add(realgr);

  //  flux5->Add(begr);
  flux5->Add(realgr);



   begr->SetLineColor(1);
   begr->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   begr->SetMarkerColor(1);
   begr->SetMarkerSize(1.);

   realgr->SetLineColor(2);
   realgr->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   realgr->SetMarkerColor(2);
   realgr->SetMarkerSize(1.);


   largegr->SetLineColor(3);
   largegr->SetMarkerStyle(33); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   largegr->SetMarkerColor(3);
   largegr->SetMarkerSize(1.);

   down75gr->SetLineColor(1);
   down75gr->SetMarkerStyle(33); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   down75gr->SetMarkerColor(4);
   down75gr->SetMarkerSize(1.);

   down15gr->SetLineColor(1);
   down15gr->SetMarkerStyle(33); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   down15gr->SetMarkerColor(6);
   down15gr->SetMarkerSize(1.);


  
  TCanvas *c1=new TCanvas;
  flux->Draw("ap");   
flux->GetYaxis()->SetRangeUser(1E8.,1E15.);
  c1->SetLogy();

   flux->GetXaxis()->SetTitle("y position   [cm]");
   flux->GetYaxis()->SetTitle("Integrated Flux  [n/cm^2/s]  ");
   flux->SetTitle("Flux");
   flux->GetXaxis()->SetTitleOffset(1.2);
   flux->GetXaxis()->SetTitleSize(0.04);

   //   TCanvas *c2=new TCanvas;
   //   realgr->Draw("ap");



//////////////////////////////

//  flux->Draw("ap");   
  line1 = new TLine(0.05,0.05,0.80,0.70);
  line1->SetLineWidth(2);
  line1->SetLineColor(2);
  line1->Draw();
  line1->DrawLine(-33.5,1e8,-33.5,1e15);
  line2 = new TLine(0.05,0.05,0.80,0.70);
  line2->SetLineWidth(2);
  line2->SetLineColor(2);
  line2->Draw();
  line2->DrawLine(-58.5,1e8,-58.5,1e15);


   TLegend* fluxleg = new TLegend(0.58,0.25,0.88,0.45);
   fluxleg->AddEntry(realgr,"Baseline","p");
   //   fluxleg->AddEntry(begr,"Be only","p");
   fluxleg->AddEntry(largegr,"Beam upmost","p");
   //   fluxleg->AddEntry(down75gr,"Beam 7.5cm down","p");
   //   fluxleg->AddEntry(down15gr,"Beam 15.0cm down","p");

   fluxleg->SetFillColor(0);
   fluxleg->SetLineColor(1);

   fluxleg->Draw();

c1->Print("ucn_flux_in_y.eps");
c1->Print("ucn_flux_in_y.png");
c1->Print("ucn_flux_in_y.pdf");

/////////////////////////////
 TCanvas *c2=new TCanvas;
  c2->SetLogy();



  flux2->Draw("ap");   
flux2->GetYaxis()->SetRangeUser(1E8.,1E15.);
   flux2->GetXaxis()->SetTitle("y position   [cm]");
   flux2->GetYaxis()->SetTitle("Integrated Flux  [n/cm^2/s]  ");
   flux2->SetTitle("Flux");
   flux2->GetXaxis()->SetTitleOffset(1.2);
   flux2->GetXaxis()->SetTitleSize(0.04);
  line3 = new TLine(0.05,0.05,0.80,0.70);
  line3->SetLineWidth(2);
  line3->SetLineColor(2);
  line3->Draw();
  line3->DrawLine(-42.5,1e8,-42.5,1e15);
  line4 = new TLine(0.05,0.05,0.80,0.70);
  line4->SetLineWidth(2);
  line4->SetLineColor(2);
  line4->Draw();
  line4->DrawLine(-67.5,1e8,-67.5,1e15);


   TLegend* fluxleg2 = new TLegend(0.58,0.25,0.88,0.45);
   fluxleg2->AddEntry(realgr,"Baseline","p");
   //   fluxleg2->AddEntry(begr,"Be only","p");
   fluxleg2->AddEntry(down75gr,"Beam 7.5 cm down","p");

   fluxleg2->SetFillColor(0);
   fluxleg2->SetLineColor(1);

   fluxleg2->Draw();

c2->Print("ucn_flux_in_y2.eps");
c2->Print("ucn_flux_in_y2.png");
c2->Print("ucn_flux_in_y2.pdf");

/////////////////////////////
 TCanvas *c3=new TCanvas;
  c3->SetLogy();





  flux3->Draw("ap");   
   flux3->GetXaxis()->SetTitle("y position   [cm]");
   flux3->GetYaxis()->SetTitle("Integrated Flux  [n/cm^2/s]  ");
   flux3->SetTitle("Flux");
   flux3->GetXaxis()->SetTitleOffset(1.2);
   flux3->GetXaxis()->SetTitleSize(0.04);
flux3->GetYaxis()->SetRangeUser(1E8.,1E15.);
  line3 = new TLine(0.05,0.05,0.80,0.70);
  line3->SetLineWidth(2);
  line3->SetLineColor(2);
  line3->Draw();
  line3->DrawLine(-50.0,1e8,-50.0,1e15);
  line4 = new TLine(0.05,0.05,0.80,0.70);
  line4->SetLineWidth(2);
  line4->SetLineColor(2);
  line4->Draw();
  line4->DrawLine(-75,1e8,-75,1e15);


   TLegend* fluxleg3 = new TLegend(0.5,0.25,0.88,0.45);
   fluxleg3->AddEntry(realgr,"Baseline","p");
   //   fluxleg3->AddEntry(begr,"Be only","p");
   fluxleg3->AddEntry(down15gr,"Beam 15.0 cm down","p");

   fluxleg3->SetFillColor(0);
   fluxleg3->SetLineColor(1);

   fluxleg3->Draw();

c3->Print("ucn_flux_in_y3.eps");
c3->Print("ucn_flux_in_y3.png");
c3->Print("ucn_flux_in_y3.pdf");

/////////////////////////////


//    flux->Draw("ap");   

}

void large3() {


  Double_t bins25[162] =  { 1.00000E-11, 1.25893E-11, 1.58489E-11, 1.99526E-11, 2.51189E-11, 3.16228E-11, 3.98107E-11, 5.01187E-11, 6.30957E-11, 7.94328E-11, 1.00000E-10, 1.25893E-10, 1.58489E-10, 1.99526E-10, 2.51189E-10, 3.16228E-10, 3.98107E-10, 5.01187E-10, 6.30957E-10, 7.94328E-10, 1.00000E-09, 1.25893E-09, 1.58489E-09, 1.99526E-09, 2.51189E-09, 3.16228E-09, 3.98107E-09, 5.01187E-09, 6.30957E-09, 7.94328E-09, 1.00000E-08, 1.25893E-08, 1.58489E-08, 1.99526E-08, 2.51189E-08, 3.16228E-08, 3.98107E-08, 5.01187E-08, 6.30957E-08, 7.94328E-08, 1.00000E-07, 1.25893E-07, 1.58489E-07, 1.99526E-07, 2.51189E-07, 3.16228E-07, 3.98107E-07, 5.01187E-07, 6.30957E-07, 7.94328E-07, 1.00000E-06, 1.25893E-06, 1.58489E-06, 1.99526E-06, 2.51189E-06, 3.16228E-06, 3.98107E-06, 5.01187E-06, 6.30957E-06, 7.94328E-06, 1.00000E-05, 1.25893E-05, 1.58489E-05, 1.99526E-05, 2.51189E-05, 3.16228E-05, 3.98107E-05, 5.01187E-05, 6.30957E-05, 7.94328E-05, 1.00000E-04, 1.25893E-04, 1.58489E-04, 1.99526E-04, 2.51189E-04, 3.16228E-04, 3.98107E-04, 5.01187E-04, 6.30957E-04, 7.94328E-04, 1.00000E-03, 1.25893E-03, 1.58489E-03, 1.99526E-03, 2.51189E-03, 3.16228E-03, 3.98107E-03, 5.01187E-03, 6.30957E-03, 7.94328E-03, 1.00000E-02, 1.25893E-02, 1.58489E-02, 1.99526E-02, 2.51189E-02, 3.16228E-02, 3.98107E-02, 5.01187E-02, 6.30957E-02, 7.94328E-02, 1.00000E-01, 1.25893E-01, 1.58489E-01, 1.99526E-01, 2.51189E-01, 3.16228E-01, 3.98107E-01, 5.01187E-01, 6.30957E-01, 7.94328E-01, 1.00000E+00, 1.25893E+00, 1.58489E+00, 1.99526E+00, 2.51189E+00, 3.16228E+00, 3.98107E+00, 5.01187E+00, 6.30957E+00, 7.94328E+00, 1.00000E+01, 1.25893E+01, 1.58489E+01, 1.99526E+01, 2.51189E+01, 3.16228E+01, 3.98107E+01, 5.01187E+01, 6.30957E+01, 7.94328E+01, 1.00000E+02, 1.25893E+02, 1.58489E+02, 1.99526E+02, 2.51189E+02, 3.16228E+02, 3.98107E+02, 5.01187E+02, 6.30957E+02, 7.94328E+02, 1.00000E+03, 1.25893E+03, 1.58489E+03, 1.99526E+03, 2.51189E+03, 3.16228E+03, 3.98107E+03, 5.01187E+03, 6.30957E+03, 7.94328E+03, 1.00000E+04, 1.25893E+04, 1.58489E+04, 1.99526E+04, 2.51189E+04, 3.16228E+04, 3.98107E+04, 5.01187E+04, 6.30957E+04, 7.94328E+04, 1.00000E+05};



Double_t def_25_6[324]={1.07591E-11,0.1428,2.45589E-12,0.2968,6.42341E-12,0.1857,8.11969E-12,0.1644,1.09722E-11,0.1414,2.23879E-11,0.0990,2.74645E-11,0.0894,4.75158E-11,0.0680,7.39521E-11,0.0545,1.37733E-10,0.0401,2.17169E-10,0.0318,3.02579E-10,0.0271,4.29642E-10,0.0227,7.45745E-10,0.0173,1.16713E-09,0.0138,1.71234E-09,0.0115,2.33443E-09,0.0099,3.71057E-09,0.0078,5.55257E-09,0.0064,8.11238E-09,0.0053,1.18529E-08,0.0044,1.71873E-08,0.0037,2.41198E-08,0.0032,3.32595E-08,0.0027,4.48615E-08,0.0024,5.92743E-08,0.0021,7.53276E-08,0.0020,9.18217E-08,0.0018,1.09513E-07,0.0017,1.24469E-07,0.0017,1.33258E-07,0.0017,1.33735E-07,0.0018,1.09842E-07,0.0019,6.04858E-08,0.0025,3.82691E-08,0.0032,2.60871E-08,0.0043,1.94853E-08,0.0048,1.58469E-08,0.0055,1.39081E-08,0.0062,1.26356E-08,0.0068,1.24578E-08,0.0072,1.27410E-08,0.0077,1.32019E-08,0.0081,1.31730E-08,0.0084,1.20835E-08,0.0092,1.12022E-08,0.0098,1.14892E-08,0.0094,1.27969E-08,0.0077,1.37556E-08,0.0070,1.40119E-08,0.0069,1.39671E-08,0.0070,1.41488E-08,0.0071,1.40267E-08,0.0070,1.40318E-08,0.0070,1.40549E-08,0.0070,1.41053E-08,0.0071,1.42012E-08,0.0071,1.41696E-08,0.0075,1.41292E-08,0.0070,1.41451E-08,0.0071,1.42549E-08,0.0069,1.42559E-08,0.0068,1.40251E-08,0.0069,1.40834E-08,0.0069,1.42870E-08,0.0069,1.40910E-08,0.0069,1.41318E-08,0.0070,1.41114E-08,0.0069,1.40404E-08,0.0070,1.41317E-08,0.0070,1.38503E-08,0.0070,1.38498E-08,0.0070,1.39965E-08,0.0071,1.39362E-08,0.0071,1.36476E-08,0.0072,1.36286E-08,0.0072,1.36355E-08,0.0072,1.34693E-08,0.0073,1.33705E-08,0.0074,1.32001E-08,0.0074,1.33220E-08,0.0075,1.31228E-08,0.0076,1.29010E-08,0.0077,1.29516E-08,0.0078,1.29516E-08,0.0078,1.28294E-08,0.0079,1.27886E-08,0.0080,1.23713E-08,0.0081,1.24033E-08,0.0081,1.25117E-08,0.0083,1.24443E-08,0.0083,1.22828E-08,0.0085,1.23493E-08,0.0085,1.22030E-08,0.0085,1.24115E-08,0.0085,1.50444E-08,0.0073,1.19390E-08,0.0068,1.29713E-08,0.0078,1.33317E-08,0.0081,1.61556E-08,0.0069,1.35639E-08,0.0067,1.49579E-08,0.0072,1.69924E-08,0.0064,1.58668E-08,0.0068,1.50884E-08,0.0072,1.58998E-08,0.0071,1.53548E-08,0.0073,1.47392E-08,0.0073,1.40512E-08,0.0077,1.29140E-08,0.0079,1.07871E-08,0.0087,9.76450E-09,0.0092,8.38533E-09,0.0101,6.95248E-09,0.0111,5.69815E-09,0.0126,4.30383E-09,0.0147,3.37119E-09,0.0167,2.42852E-09,0.0196,1.80905E-09,0.0223,1.28925E-09,0.0258,9.74824E-10,0.0273,8.35871E-10,0.0254,8.21880E-10,0.0230,8.46535E-10,0.0196,8.38723E-10,0.0212,5.95081E-10,0.0251,4.37187E-10,0.0290,2.97343E-10,0.0346,2.24425E-10,0.0434,1.53161E-10,0.0485,1.07063E-10,0.0537,7.25511E-11,0.0651,5.36585E-11,0.0774,5.60383E-11,0.0774,3.25305E-11,0.1004,1.41282E-11,0.1528,6.24246E-12,0.2302,2.35800E-12,0.3782,1.33532E-12,0.5001,3.43994E-13,1.0000,3.09946E-13,1.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,2.99068E-13,1.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000};

Double_t beam_25_6[324]={1.20206E-11,0.1348,3.76096E-12,0.2399,5.02496E-12,0.2085,8.11978E-12,0.1642,1.12008E-11,0.1394,2.20987E-11,0.0995,2.58556E-11,0.0920,4.60283E-11,0.0690,8.78743E-11,0.0499,1.35004E-10,0.0403,2.21827E-10,0.0316,2.91501E-10,0.0276,4.20843E-10,0.0229,7.62553E-10,0.0171,1.18228E-09,0.0137,1.70078E-09,0.0114,2.38805E-09,0.0097,3.73512E-09,0.0078,5.52641E-09,0.0064,8.00434E-09,0.0054,1.17307E-08,0.0045,1.70015E-08,0.0037,2.39404E-08,0.0051,3.29029E-08,0.0027,4.47085E-08,0.0024,5.89208E-08,0.0021,7.44904E-08,0.0019,9.10028E-08,0.0018,1.08438E-07,0.0017,1.23670E-07,0.0017,1.32158E-07,0.0017,1.33308E-07,0.0017,1.09616E-07,0.0030,6.01873E-08,0.0025,3.80497E-08,0.0032,2.58730E-08,0.0040,1.92807E-08,0.0048,1.57939E-08,0.0055,1.38119E-08,0.0063,1.26556E-08,0.0068,1.22057E-08,0.0072,1.25337E-08,0.0077,1.31397E-08,0.0081,1.32794E-08,0.0084,1.22543E-08,0.0091,1.11864E-08,0.0102,1.15475E-08,0.0095,1.26358E-08,0.0076,1.39082E-08,0.0069,1.39464E-08,0.0070,1.39057E-08,0.0069,1.38250E-08,0.0069,1.40067E-08,0.0069,1.38949E-08,0.0070,1.40757E-08,0.0069,1.40854E-08,0.0070,1.41615E-08,0.0069,1.40720E-08,0.0071,1.41274E-08,0.0070,1.42857E-08,0.0070,1.42444E-08,0.0069,1.41811E-08,0.0069,1.40923E-08,0.0069,1.40608E-08,0.0069,1.42151E-08,0.0069,1.41356E-08,0.0069,1.40535E-08,0.0070,1.40313E-08,0.0069,1.40727E-08,0.0070,1.40586E-08,0.0070,1.38576E-08,0.0070,1.38840E-08,0.0071,1.37055E-08,0.0071,1.38234E-08,0.0071,1.36759E-08,0.0072,1.36819E-08,0.0072,1.34849E-08,0.0072,1.36462E-08,0.0073,1.34367E-08,0.0074,1.34166E-08,0.0074,1.33582E-08,0.0076,1.31532E-08,0.0077,1.30003E-08,0.0077,1.29690E-08,0.0078,1.29935E-08,0.0078,1.26906E-08,0.0079,1.25596E-08,0.0081,1.26473E-08,0.0081,1.23948E-08,0.0081,1.22564E-08,0.0083,1.21311E-08,0.0084,1.22390E-08,0.0084,1.22884E-08,0.0085,1.23129E-08,0.0085,1.22364E-08,0.0085,1.50189E-08,0.0073,1.20576E-08,0.0068,1.30089E-08,0.0078,1.35406E-08,0.0080,1.62336E-08,0.0070,1.35850E-08,0.0066,1.51198E-08,0.0072,1.68823E-08,0.0064,1.59572E-08,0.0068,1.50661E-08,0.0072,1.61877E-08,0.0070,1.54430E-08,0.0073,1.48194E-08,0.0073,1.38048E-08,0.0077,1.28370E-08,0.0079,1.08684E-08,0.0087,9.59672E-09,0.0093,8.22204E-09,0.0102,6.78374E-09,0.0113,5.65456E-09,0.0126,4.23870E-09,0.0146,3.32559E-09,0.0167,2.49268E-09,0.0193,1.83093E-09,0.0225,1.24591E-09,0.0260,9.42149E-10,0.0272,8.70903E-10,0.0257,8.15528E-10,0.0235,8.12605E-10,0.0200,8.25482E-10,0.0207,5.92384E-10,0.0250,4.39370E-10,0.0335,3.28540E-10,0.0470,2.21873E-10,0.0573,1.75730E-10,0.0518,1.10539E-10,0.0518,6.92648E-11,0.0679,5.66418E-11,0.0740,5.30706E-11,0.0785,3.36351E-11,0.0990,1.07516E-11,0.1746,6.97022E-12,0.2183,1.61835E-12,0.4485,1.29368E-12,0.5026,3.40528E-13,1.0000,3.09946E-13,1.0000,2.18398E-13,1.0000,0.00000E+00,0.0000,2.99068E-13,1.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000,0.00000E+00,0.0000}; 

 Double_t def_25_6_v2[324]  = {0};
 Double_t def_25_6_v2e[324] = {0};
 Double_t beam_25_6_v2[324] = {0};
 Double_t beam_25_6_v2e[324]= {0};

 Double_t diff_25_6_v2[162] = {0};
 Double_t diff_25_6_v2e[162]= {0};

 Double_t rat_25_6_v2[162] = {0};
 Double_t rat_25_6_v2e[162]= {0};

 Double_t bins25_v3[162]    = {0};
 Double_t bins25_e[162]     = {0};

 Int_t ii=0;

 for (Int_t i=0;i<320;i++) {
   ii += (i%2);
   bins25_v3[ii]=9.0446/sqrt(bins25[ii]*1E9);
   if ((i%2)==0){
     def_25_6_v2[ii]=def_25_6[i];
     beam_25_6_v2[ii]=beam_25_6[i];
     diff_25_6_v2[ii]=beam_25_6_v2[ii]-def_25_6_v2[ii];
     if (def_25_6_v2[ii]>1E-20) rat_25_6_v2[ii]=beam_25_6_v2[ii]/def_25_6_v2[ii];
     else  rat_25_6_v2[ii]=0;
   }
   else if ((i%2)!=0) {
     def_25_6_v2e[ii]=def_25_6[i]*def_25_6[i-1];
     beam_25_6_v2e[ii]=beam_25_6[i]*beam_25_6[i-1];
     diff_25_6_v2e[ii]=sqrt(pow( beam_25_6_v2e[ii],2) + pow(def_25_6_v2e[ii],2));
     rat_25_6_v2e[ii]=sqrt(pow( beam_25_6[i],2) + pow(def_25_6[i],2));
     std::cout<<beam_25_6[i]<<std::endl;
   }
   std::cout<<i<<" "<<ii<<" "<<bins25[ii]<<" "<<bins25_v3[ii]<<" "<<diff_25_6_v2[ii]<<" "<<def_25_6_v2e[ii]<<" "<<beam_25_6_v2e[ii]<<"   "<< rat_25_6_v2e[ii]<< " "<< bins25_v3[ii]<<std::endl;
 }
   
 // bins
 /*   def_6   = new TGraphErrors(160,bins25_v3,def_25_6_v2,bins25_e,def_25_6_v2e);
   beam_6  = new TGraphErrors(160,bins25_v3,beam_25_6_v2,bins25_e,beam_25_6_v2e);
   diff_6  = new TGraphErrors(160,bins25_v3,diff_25_6_v2,bins25_e,diff_25_6_v2e);
   rat_6  = new TGraphErrors(160,bins25_v3,rat_25_6_v2,bins25_e,rat_25_6_v2e);
 */
 
 //   def_6   = new TGraphErrors(160,bins25,def_25_6_v2,bins25_e,def_25_6_v2e);
   def_6   = new TGraph(160,bins25,def_25_6_v2);
   beam_6  = new TGraph(160,bins25,beam_25_6_v2);
   //   beam_6  = new TGraphErrors(160,bins25,beam_25_6_v2,bins25_e,beam_25_6_v2e);
   diff_6  = new TGraphErrors(160,bins25,diff_25_6_v2,bins25_e,diff_25_6_v2e);
   rat_6  = new TGraphErrors(160,bins25,rat_25_6_v2,bins25_e,rat_25_6_v2e);
 


   //   def_6->GetXaxis()->SetTitle("Wavelength   [AA]");
   def_6->GetXaxis()->SetTitle("Energy   [MeV]");
   def_6->GetYaxis()->SetTitle("Flux   [particles/cm^2] (F5 tally)");
   def_6->SetTitle("Collimation tally: (x,y,z) = (411,-18,262) cm");
   //def_6->GetYaxis()->SetLabelOffset(0.4);
   //def_6->GetXaxis()->SetLabelSize(0.04);
   def_6->GetYaxis()->SetTitleOffset(0.2);
   def_6->GetXaxis()->SetTitleOffset(1.2);
   def_6->GetYaxis()->SetTitleSize(0.13);
   def_6->GetXaxis()->SetTitleSize(0.09);
   def_6->SetLineColor(1);
   def_6->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   def_6->SetMarkerColor(1);
   def_6->SetMarkerSize(0.5);
   //   def_6->SetLineWidth(4.0);

   //   beam_6->GetXaxis()->SetTitle("Wavelength   [AA]");
   beam_6->GetXaxis()->SetTitle("Energy   [MeV]");
   beam_6->GetYaxis()->SetTitle("Flux   [particles/cm^2] (F5 tally)");
   beam_6->SetTitle("Collimation tally: (x,y,z) = (411,-18,262) cm");
   //beam_6->GetYaxis()->SetLabelOffset(0.4);
   //beam_6->GetXaxis()->SetLabelSize(0.04);
   beam_6->GetYaxis()->SetTitleOffset(0.2);
   beam_6->GetXaxis()->SetTitleOffset(1.2);
   beam_6->GetYaxis()->SetTitleSize(0.13);
   beam_6->GetXaxis()->SetTitleSize(0.09);
   beam_6->SetLineColor(2);
   beam_6->SetMarkerStyle(27);
   beam_6->SetMarkerColor(2);
   beam_6->SetMarkerSize(0.5);
   //   beam_6->SetLineWidth(4.0);


   //   diff_6->GetXaxis()->SetTitle("Wavelength   [AA]");
   diff_6->GetXaxis()->SetTitle("Energy   [MeV]");
   //   diff_6->GetYaxis()->SetTitle("#Delta Flux   [particles/cm^2] (F5 tally)");
   diff_6->GetYaxis()->SetTitle("#Delta Flux [n/cm^2/s]");
   diff_6->SetTitle("");
   //diff_6->GetYaxis()->SetLabelOffset(0.4);
   //diff_6->GetXaxis()->SetLabelSize(0.04);
   diff_6->GetYaxis()->SetTitleOffset(1.);
   diff_6->GetXaxis()->SetTitleOffset(1.2);
   diff_6->GetYaxis()->SetTitleSize(10.8);
   diff_6->GetXaxis()->SetTitleSize(0.04);
   diff_6->SetLineColor(1);
   diff_6->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   diff_6->SetMarkerColor(1);
   diff_6->SetMarkerSize(0.5);


   rat_6->GetXaxis()->SetTitle("Energy   [MeV]");
   //   rat_6->GetXaxis()->SetTitle("Wavelength   [AA]");
   //   rat_6->GetYaxis()->SetTitle("#Delta Flux   [particles/cm^2] (F5 tally)");
   rat_6->GetYaxis()->SetTitle("Flux ratio");
   rat_6->SetTitle("");
   //rat_6->GetYaxis()->SetLabelOffset(0.4);
   //rat_6->GetXaxis()->SetLabelSize(0.04);
   rat_6->GetYaxis()->SetTitleOffset(1.);
   rat_6->GetXaxis()->SetTitleOffset(1.2);
   rat_6->GetYaxis()->SetTitleSize(10.8);
   rat_6->GetXaxis()->SetTitleSize(0.04);
   rat_6->SetLineColor(1);
   rat_6->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   rat_6->SetMarkerColor(1);
   rat_6->SetMarkerSize(0.5);


   //   def_6->Draw("apl");
   //   beam_6->Draw("apl");

TMultiGraph *def_beam6 = new TMultiGraph();
def_beam6->Add(def_6);
def_beam6->Add(beam_6);
def_beam6->SetTitle("Collimation tally: (x,y,z) = (411,-18,262) cm");

 TCanvas *c5=new TCanvas;
        pad1 = new TPad("pad1","",0,0.5,1,1);
        pad2 = new TPad("pad2","",0,0.25,1,0.5);
        pad3 = new TPad("pad3","",0,0,1,0.25);
        pad1->Draw();
        pad2->Draw();
        pad3->Draw();
        pad1->cd();
        pad1->SetBottomMargin(1.0);
	pad2->SetGridx();
	pad2->SetGridy();
	pad3->SetGridx();
	pad3->SetGridy();
	pad1->SetLogx();
	pad2->SetLogx();
	pad3->SetLogx();



	def_beam6->Draw("apl");
   def_beam6->GetYaxis()->SetTitleOffset(0.5);
   def_beam6->GetXaxis()->SetTitleOffset(1.2);
   def_beam6->GetYaxis()->SetTitleSize(0.07);
   def_beam6->GetXaxis()->SetTitleSize(0.09);
   def_beam6->GetYaxis()->SetLabelSize(0.05);
   def_beam6->GetXaxis()->SetLabelSize(0.05);
	// beam_6->Draw("apl");
	//def_6->Draw("apl");

// def_beam6->GetXaxis()->SetTitle("Wavelength   [AA]");
 def_beam6->GetYaxis()->SetTitle("Flux   [n/cm^2/s]");
// def_beam6->SetTitle("Flux at pos1 : (x,y,z) = (197,-18,17) cm");


TLegend* flux = new TLegend(0.58,0.75,0.88,0.88);
flux->AddEntry(def_6,"Baseline","p");
flux->AddEntry(beam_6,"Beam tube, y=-55 cm","p");

flux->SetFillColor(0);
flux->SetLineColor(1);

flux->Draw();

    pad2->cd();
    pad2->SetTopMargin(0.0);
    pad2->SetBottomMargin(0.2);

diff_6->Draw("apl");

 diff_6->GetXaxis()->SetTitle("Energy   [MeV]");
 diff_6->GetYaxis()->SetTitleOffset(0.25);
 diff_6->GetXaxis()->SetTitleOffset(1.2);
 diff_6->GetYaxis()->SetTitleSize(0.11);
 diff_6->GetXaxis()->SetTitleSize(0.09);
 diff_6->GetYaxis()->SetLabelSize(0.09);

 //   c1->SetLogy();
//   c1->SetLogx();

    pad3->cd();
    pad3->SetTopMargin(0.0);
    pad3->SetBottomMargin(0.2);

 rat_6->Draw("apl");

 rat_6->GetXaxis()->SetTitle("Energy   [MeV]");
 rat_6->GetYaxis()->SetTitleOffset(0.25);
 rat_6->GetXaxis()->SetTitleOffset(1.2);
 rat_6->GetYaxis()->SetTitleSize(0.11);
 rat_6->GetXaxis()->SetTitleSize(0.09);
 rat_6->GetYaxis()->SetLabelSize(0.09);



c5->Print("ucn_flux_pos6.eps");
c5->Print("ucn_flux_pos6.png");
c5->Print("ucn_flux_pos6.pdf");

/*
 TCanvas *c1=new TCanvas;
 diff_6->Draw("apl");
 TCanvas *c2=new TCanvas;
 def_6->Draw("apl");
 TCanvas *c3=new TCanvas;
 beam_6->Draw("apl");
 TCanvas *c4=new TCanvas;
def_beam5->Draw("apl");
*/
// TCanvas *c4=new TCanvas;
//rat_6->Draw("apl");

}



void large2() {


  Double_t bins25[162] =  { 1.00000E-11, 1.25893E-11, 1.58489E-11, 1.99526E-11, 2.51189E-11, 3.16228E-11, 3.98107E-11, 5.01187E-11, 6.30957E-11, 7.94328E-11, 1.00000E-10, 1.25893E-10, 1.58489E-10, 1.99526E-10, 2.51189E-10, 3.16228E-10, 3.98107E-10, 5.01187E-10, 6.30957E-10, 7.94328E-10, 1.00000E-09, 1.25893E-09, 1.58489E-09, 1.99526E-09, 2.51189E-09, 3.16228E-09, 3.98107E-09, 5.01187E-09, 6.30957E-09, 7.94328E-09, 1.00000E-08, 1.25893E-08, 1.58489E-08, 1.99526E-08, 2.51189E-08, 3.16228E-08, 3.98107E-08, 5.01187E-08, 6.30957E-08, 7.94328E-08, 1.00000E-07, 1.25893E-07, 1.58489E-07, 1.99526E-07, 2.51189E-07, 3.16228E-07, 3.98107E-07, 5.01187E-07, 6.30957E-07, 7.94328E-07, 1.00000E-06, 1.25893E-06, 1.58489E-06, 1.99526E-06, 2.51189E-06, 3.16228E-06, 3.98107E-06, 5.01187E-06, 6.30957E-06, 7.94328E-06, 1.00000E-05, 1.25893E-05, 1.58489E-05, 1.99526E-05, 2.51189E-05, 3.16228E-05, 3.98107E-05, 5.01187E-05, 6.30957E-05, 7.94328E-05, 1.00000E-04, 1.25893E-04, 1.58489E-04, 1.99526E-04, 2.51189E-04, 3.16228E-04, 3.98107E-04, 5.01187E-04, 6.30957E-04, 7.94328E-04, 1.00000E-03, 1.25893E-03, 1.58489E-03, 1.99526E-03, 2.51189E-03, 3.16228E-03, 3.98107E-03, 5.01187E-03, 6.30957E-03, 7.94328E-03, 1.00000E-02, 1.25893E-02, 1.58489E-02, 1.99526E-02, 2.51189E-02, 3.16228E-02, 3.98107E-02, 5.01187E-02, 6.30957E-02, 7.94328E-02, 1.00000E-01, 1.25893E-01, 1.58489E-01, 1.99526E-01, 2.51189E-01, 3.16228E-01, 3.98107E-01, 5.01187E-01, 6.30957E-01, 7.94328E-01, 1.00000E+00, 1.25893E+00, 1.58489E+00, 1.99526E+00, 2.51189E+00, 3.16228E+00, 3.98107E+00, 5.01187E+00, 6.30957E+00, 7.94328E+00, 1.00000E+01, 1.25893E+01, 1.58489E+01, 1.99526E+01, 2.51189E+01, 3.16228E+01, 3.98107E+01, 5.01187E+01, 6.30957E+01, 7.94328E+01, 1.00000E+02, 1.25893E+02, 1.58489E+02, 1.99526E+02, 2.51189E+02, 3.16228E+02, 3.98107E+02, 5.01187E+02, 6.30957E+02, 7.94328E+02, 1.00000E+03, 1.25893E+03, 1.58489E+03, 1.99526E+03, 2.51189E+03, 3.16228E+03, 3.98107E+03, 5.01187E+03, 6.30957E+03, 7.94328E+03, 1.00000E+04, 1.25893E+04, 1.58489E+04, 1.99526E+04, 2.51189E+04, 3.16228E+04, 3.98107E+04, 5.01187E+04, 6.30957E+04, 7.94328E+04, 1.00000E+05};


  ///users/klinkby/UCN/ThroughGoingBeam/large_def/medium2/ucn_def_it2.o
 Double_t def_25_5[324] = {1.31640E-13, 1.0000, 2.56541E-22, 1.0000, 1.29465E-13, 1.0000, 1.31355E-13, 1.0000, 2.64158E-13, 0.7071, 4.50464E-40, 0.7465, 1.31522E-13, 1.0000, 2.83884E-13, 0.7090, 8.86106E-13, 0.4132, 1.57903E-12, 0.2887, 1.77398E-12, 0.3130, 3.70476E-12, 0.2099, 5.33745E-12, 0.1890, 7.80839E-12, 0.1380, 1.00177E-11, 0.1370, 1.53043E-11, 0.1018, 2.59497E-11, 0.0789, 3.83573E-11, 0.0661, 5.62207E-11, 0.0539, 9.35686E-11, 0.0429, 1.55544E-10, 0.0343, 2.52307E-10, 0.0279, 4.04724E-10, 0.0214, 6.25703E-10, 0.0173, 9.31336E-10, 0.0150, 1.43144E-09, 0.0121, 2.28911E-09, 0.0151, 3.44192E-09, 0.0082, 5.17332E-09, 0.0071, 7.83307E-09, 0.0060, 1.14662E-08, 0.0051, 1.67855E-08, 0.0043, 2.35453E-08, 0.0037, 3.25061E-08, 0.0033, 4.39584E-08, 0.0029, 5.72029E-08, 0.0027, 7.03483E-08, 0.0025, 8.12638E-08, 0.0024, 8.55312E-08, 0.0024, 8.07976E-08, 0.0025, 6.66917E-08, 0.0027, 4.89298E-08, 0.0032, 3.14994E-08, 0.0041, 1.93827E-08, 0.0053, 1.36292E-08, 0.0067, 1.12765E-08, 0.0078, 1.07703E-08, 0.0086, 1.03511E-08, 0.0087, 1.01687E-08, 0.0093, 9.94172E-09, 0.0097, 9.68858E-09, 0.0097, 9.48657E-09, 0.0110, 9.35549E-09, 0.0112, 9.06849E-09, 0.0110, 9.04023E-09, 0.0128, 8.93634E-09, 0.0118, 8.95448E-09, 0.0126, 8.97811E-09, 0.0127, 8.78305E-09, 0.0127, 8.74216E-09, 0.0126, 8.54728E-09, 0.0097, 8.62955E-09, 0.0085, 8.47219E-09, 0.0086, 8.50937E-09, 0.0087, 8.38975E-09, 0.0087, 8.39480E-09, 0.0087, 8.28032E-09, 0.0087, 8.34005E-09, 0.0087, 8.27455E-09, 0.0089, 8.26662E-09, 0.0088, 8.18505E-09, 0.0089, 8.02919E-09, 0.0089, 8.11578E-09, 0.0090, 7.95054E-09, 0.0090, 7.97973E-09, 0.0091, 7.94691E-09, 0.0091, 7.74476E-09, 0.0092, 7.79945E-09, 0.0091, 7.50853E-09, 0.0093, 7.61428E-09, 0.0094, 7.32333E-09, 0.0095, 7.30474E-09, 0.0095, 7.17134E-09, 0.0096, 7.07809E-09, 0.0098, 6.97502E-09, 0.0098, 6.96484E-09, 0.0100, 6.84127E-09, 0.0101, 6.71254E-09, 0.0101, 6.56889E-09, 0.0101, 6.50315E-09, 0.0103, 6.52415E-09, 0.0105, 6.38317E-09, 0.0105, 6.34995E-09, 0.0106, 6.42389E-09, 0.0107, 6.40435E-09, 0.0107, 7.18452E-09, 0.0099, 6.68400E-09, 0.0095, 6.67302E-09, 0.0105, 6.89464E-09, 0.0104, 7.91280E-09, 0.0095, 7.46697E-09, 0.0093, 8.01374E-09, 0.0094, 8.87391E-09, 0.0087, 9.01101E-09, 0.0089, 9.36923E-09, 0.0087, 1.03641E-08, 0.0081, 1.06941E-08, 0.0078, 9.42946E-09, 0.0084, 1.04763E-08, 0.0081, 1.10043E-08, 0.0078, 9.53895E-09, 0.0081, 8.79126E-09, 0.0085, 8.65426E-09, 0.0086, 7.62539E-09, 0.0092, 6.38265E-09, 0.0103, 5.59741E-09, 0.0113, 4.66611E-09, 0.0121, 4.15614E-09, 0.0133, 3.23333E-09, 0.0148, 2.53399E-09, 0.0166, 1.98074E-09, 0.0195, 1.55463E-09, 0.0210, 1.27196E-09, 0.0234, 1.02707E-09, 0.0235, 1.13011E-09, 0.0192, 8.71153E-10, 0.0210, 6.93143E-10, 0.0241, 5.62007E-10, 0.0335, 4.28231E-10, 0.0376, 2.91162E-10, 0.0366, 2.02957E-10, 0.0409, 1.14474E-10, 0.0503, 7.28304E-11, 0.0637, 6.55341E-11, 0.0697, 2.48248E-11, 0.1185, 8.21786E-12, 0.1936, 2.47309E-12, 0.3553, 3.28912E-13, 1.0000, 6.06701E-13, 0.7081, 0.00000E+00, 0.0000, 9.49246E-13, 0.8725, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 5.90424E-13, 0.7074, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000};

 // /users/klinkby/UCN/ThroughGoingBeam/large_down_7.5/medium2/ucn_beam_it2_down75.o
 Double_t beam_25_5[324] = {1.30844E-13, 1.0000, 2.56541E-22, 1.0000, 1.61029E-13, 1.0000, 1.30787E-13, 1.0000, 1.54557E-13, 1.0000, 2.61544E-13, 0.7071, 2.62285E-13, 0.7071, 6.15923E-13, 0.5168, 3.92501E-13, 0.5773, 2.88441E-12, 0.2345, 4.51684E-13, 0.5873, 3.27954E-12, 0.2064, 4.49161E-12, 0.1986, 7.04086E-12, 0.1434, 1.04635E-11, 0.1171, 1.58264E-11, 0.0965, 2.20979E-11, 0.1002, 3.59414E-11, 0.0659, 6.30892E-11, 0.0518, 8.27519E-11, 0.0462, 1.45433E-10, 0.0346, 2.53042E-10, 0.0268, 4.12069E-10, 0.0222, 6.17089E-10, 0.0230, 9.10806E-10, 0.0146, 1.41718E-09, 0.0122, 2.21534E-09, 0.0099, 3.39920E-09, 0.0081, 5.10768E-09, 0.0072, 7.58046E-09, 0.0061, 1.12319E-08, 0.0051, 1.65712E-08, 0.0043, 2.33806E-08, 0.0037, 3.21822E-08, 0.0033, 4.35795E-08, 0.0030, 5.64298E-08, 0.0027, 6.97451E-08, 0.0025, 8.06820E-08, 0.0025, 8.48853E-08, 0.0024, 8.02208E-08, 0.0025, 6.66908E-08, 0.0027, 4.81170E-08, 0.0032, 3.12290E-08, 0.0041, 1.91769E-08, 0.0053, 1.38115E-08, 0.0068, 1.13247E-08, 0.0079, 1.05260E-08, 0.0090, 1.04586E-08, 0.0092, 1.01722E-08, 0.0097, 9.93243E-09, 0.0100, 9.65567E-09, 0.0103, 9.59218E-09, 0.0116, 9.35041E-09, 0.0166, 9.20361E-09, 0.0113, 9.05550E-09, 0.0138, 8.82730E-09, 0.0122, 8.99628E-09, 0.0155, 8.75112E-09, 0.0134, 8.67797E-09, 0.0154, 8.87498E-09, 0.0150, 8.85349E-09, 0.0113, 8.61839E-09, 0.0087, 8.67833E-09, 0.0086, 8.57488E-09, 0.0087, 8.45250E-09, 0.0087, 8.31731E-09, 0.0087, 8.40635E-09, 0.0086, 8.35080E-09, 0.0087, 8.35175E-09, 0.0088, 8.29968E-09, 0.0088, 8.23693E-09, 0.0088, 8.09618E-09, 0.0089, 8.06573E-09, 0.0090, 7.93435E-09, 0.0091, 7.84289E-09, 0.0091, 7.79438E-09, 0.0091, 7.63170E-09, 0.0092, 7.63806E-09, 0.0093, 7.51715E-09, 0.0094, 7.51635E-09, 0.0093, 7.25653E-09, 0.0096, 7.35144E-09, 0.0095, 7.17401E-09, 0.0097, 7.08292E-09, 0.0096, 7.04432E-09, 0.0098, 6.83597E-09, 0.0100, 6.67974E-09, 0.0101, 6.68510E-09, 0.0102, 6.59601E-09, 0.0102, 6.31422E-09, 0.0103, 6.44870E-09, 0.0104, 6.32504E-09, 0.0105, 6.24563E-09, 0.0108, 6.34736E-09, 0.0107, 6.34329E-09, 0.0108, 7.15542E-09, 0.0100, 6.52341E-09, 0.0095, 6.69304E-09, 0.0104, 6.91441E-09, 0.0104, 7.90170E-09, 0.0096, 7.42318E-09, 0.0094, 8.05379E-09, 0.0095, 8.83770E-09, 0.0088, 9.03464E-09, 0.0089, 9.35547E-09, 0.0087, 1.03431E-08, 0.0082, 1.06289E-08, 0.0078, 9.28171E-09, 0.0084, 1.03324E-08, 0.0082, 1.07737E-08, 0.0078, 9.49650E-09, 0.0081, 8.72301E-09, 0.0085, 8.57852E-09, 0.0087, 7.63012E-09, 0.0092, 6.40304E-09, 0.0104, 5.53326E-09, 0.0114, 4.61336E-09, 0.0121, 4.19226E-09, 0.0129, 3.31519E-09, 0.0150, 2.59266E-09, 0.0169, 1.89376E-09, 0.0192, 1.58961E-09, 0.0215, 1.27980E-09, 0.0243, 1.04802E-09, 0.0251, 1.14421E-09, 0.0183, 9.07362E-10, 0.0212, 7.10049E-10, 0.0238, 5.72169E-10, 0.0318, 3.99709E-10, 0.0337, 3.05874E-10, 0.0323, 2.05297E-10, 0.0407, 1.24058E-10, 0.0489, 8.18278E-11, 0.0602, 5.47202E-11, 0.0745, 2.83244E-11, 0.1059, 6.80981E-12, 0.2316, 3.96567E-12, 0.2783, 8.15738E-13, 0.5974, 5.82767E-13, 0.7104, 2.64645E-13, 1.0000, 2.53104E-13, 1.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 5.90424E-13, 0.7074, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000}; 

 Double_t def_25_5_v2[324]  = {0};
 Double_t def_25_5_v2e[324] = {0};
 Double_t beam_25_5_v2[324] = {0};
 Double_t beam_25_5_v2e[324]= {0};

 Double_t diff_25_5_v2[162] = {0};
 Double_t diff_25_5_v2e[162]= {0};

 Double_t rat_25_5_v2[162] = {0};
 Double_t rat_25_5_v2e[162]= {0};

 Double_t bins25_v3[162]    = {0};
 Double_t bins25_e[162]     = {0};

 Int_t ii=0;

 for (Int_t i=0;i<320;i++) {
   ii += (i%2);
   bins25_v3[ii]=9.0446/sqrt(bins25[ii]*1E9);
   if ((i%2)==0){
     def_25_5_v2[ii]=def_25_5[i];
     beam_25_5_v2[ii]=beam_25_5[i];
     diff_25_5_v2[ii]=beam_25_5_v2[ii]-def_25_5_v2[ii];
     if (def_25_5_v2[ii]>1E-20) rat_25_5_v2[ii]=beam_25_5_v2[ii]/def_25_5_v2[ii];
     else  rat_25_5_v2[ii]=0;
   }
   else if ((i%2)!=0) {
     def_25_5_v2e[ii]=def_25_5[i]*def_25_5[i-1];
     beam_25_5_v2e[ii]=beam_25_5[i]*beam_25_5[i-1];
     diff_25_5_v2e[ii]=sqrt(pow( beam_25_5_v2e[ii],2) + pow(def_25_5_v2e[ii],2));
     rat_25_5_v2e[ii]=sqrt(pow( beam_25_5[i],2) + pow(def_25_5[i],2));
     std::cout<<beam_25_5[i]<<std::endl;
   }
   std::cout<<i<<" "<<ii<<" "<<bins25[ii]<<" "<<bins25_v3[ii]<<" "<<diff_25_5_v2[ii]<<" "<<def_25_5_v2e[ii]<<" "<<beam_25_5_v2e[ii]<<"   "<< rat_25_5_v2e[ii]<< " "<< bins25_v3[ii]<<std::endl;
 }
   
 // bins
 /*   def_5   = new TGraphErrors(160,bins25_v3,def_25_5_v2,bins25_e,def_25_5_v2e);
   beam_5  = new TGraphErrors(160,bins25_v3,beam_25_5_v2,bins25_e,beam_25_5_v2e);
   diff_5  = new TGraphErrors(160,bins25_v3,diff_25_5_v2,bins25_e,diff_25_5_v2e);
   rat_5  = new TGraphErrors(160,bins25_v3,rat_25_5_v2,bins25_e,rat_25_5_v2e);
 */
 
 //   def_5   = new TGraphErrors(160,bins25,def_25_5_v2,bins25_e,def_25_5_v2e);
   def_5   = new TGraph(160,bins25,def_25_5_v2);
   beam_5  = new TGraph(160,bins25,beam_25_5_v2);
   //   beam_5  = new TGraphErrors(160,bins25,beam_25_5_v2,bins25_e,beam_25_5_v2e);
   diff_5  = new TGraphErrors(160,bins25,diff_25_5_v2,bins25_e,diff_25_5_v2e);
   rat_5  = new TGraphErrors(160,bins25,rat_25_5_v2,bins25_e,rat_25_5_v2e);
 


   //   def_5->GetXaxis()->SetTitle("Wavelength   [AA]");
   def_5->GetXaxis()->SetTitle("Energy   [MeV]");
   def_5->GetYaxis()->SetTitle("Flux   [particles/cm^2] (F5 tally)");
   def_5->SetTitle("Collimation tally: (x,y,z) = (432,-18,225) cm");
   //def_5->GetYaxis()->SetLabelOffset(0.4);
   //def_5->GetXaxis()->SetLabelSize(0.04);
   def_5->GetYaxis()->SetTitleOffset(1.);
   def_5->GetXaxis()->SetTitleOffset(1.2);
   def_5->GetYaxis()->SetTitleSize(0.04);
   def_5->GetXaxis()->SetTitleSize(0.04);
   def_5->SetLineColor(1);
   def_5->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   def_5->SetMarkerColor(1);
   def_5->SetMarkerSize(0.5);
   //   def_5->SetLineWidth(4.0);

   //   beam_5->GetXaxis()->SetTitle("Wavelength   [AA]");
   beam_5->GetXaxis()->SetTitle("Energy   [MeV]");
   beam_5->GetYaxis()->SetTitle("Flux   [particles/cm^2] (F5 tally)");
   beam_5->SetTitle("Collimation tally: (x,y,z) = (432,-18,225) cm");
   //beam_5->GetYaxis()->SetLabelOffset(0.4);
   //beam_5->GetXaxis()->SetLabelSize(0.04);
   beam_5->GetYaxis()->SetTitleOffset(1.);
   beam_5->GetXaxis()->SetTitleOffset(1.2);
   beam_5->GetYaxis()->SetTitleSize(0.04);
   beam_5->GetXaxis()->SetTitleSize(0.04);
   beam_5->SetLineColor(2);
   beam_5->SetMarkerStyle(27);
   beam_5->SetMarkerColor(2);
   beam_5->SetMarkerSize(0.5);
   //   beam_5->SetLineWidth(4.0);



   //   diff_5->GetXaxis()->SetTitle("Wavelength   [AA]");
   diff_5->GetXaxis()->SetTitle("Energy   [MeV]");
   //   diff_5->GetYaxis()->SetTitle("#Delta Flux   [particles/cm^2] (F5 tally)");
   diff_5->GetYaxis()->SetTitle("#Delta Flux [n/cm^2/s]");
   diff_5->SetTitle("");
   //diff_5->GetYaxis()->SetLabelOffset(0.4);
   //diff_5->GetXaxis()->SetLabelSize(0.04);
   diff_5->GetYaxis()->SetTitleOffset(1.);
   diff_5->GetXaxis()->SetTitleOffset(1.2);
   diff_5->GetYaxis()->SetTitleSize(10.8);
   diff_5->GetXaxis()->SetTitleSize(0.04);


   diff_5->SetLineColor(1);
   diff_5->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   diff_5->SetMarkerColor(1);
   diff_5->SetMarkerSize(0.5);


   rat_5->GetXaxis()->SetTitle("Energy   [MeV]");
   //   rat_5->GetXaxis()->SetTitle("Wavelength   [AA]");
   //   rat_5->GetYaxis()->SetTitle("#Delta Flux   [particles/cm^2] (F5 tally)");
   rat_5->GetYaxis()->SetTitle("Flux ratio");
   rat_5->SetTitle("");
   //rat_5->GetYaxis()->SetLabelOffset(0.4);
   //rat_5->GetXaxis()->SetLabelSize(0.04);
   rat_5->GetYaxis()->SetTitleOffset(1.);
   rat_5->GetXaxis()->SetTitleOffset(1.2);
   rat_5->GetYaxis()->SetTitleSize(10.8);
   rat_5->GetXaxis()->SetTitleSize(0.04);
   rat_5->SetLineColor(1);
   rat_5->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   rat_5->SetMarkerColor(1);
   rat_5->SetMarkerSize(0.5);


   //   def_5->Draw("apl");
   //   beam_5->Draw("apl");

TMultiGraph *def_beam5 = new TMultiGraph();
def_beam5->Add(def_5);
def_beam5->Add(beam_5);
def_beam5->SetTitle("Collimation tally: (x,y,z) = (432,-18,225) cm");

 TCanvas *c5=new TCanvas;
        pad1 = new TPad("pad1","",0,0.5,1,1);
        pad2 = new TPad("pad2","",0,0.25,1,0.5);
        pad3 = new TPad("pad3","",0,0,1,0.25);
        pad1->Draw();
        pad2->Draw();
        pad3->Draw();
        pad1->cd();
        pad1->SetBottomMargin(1.0);
	pad2->SetGridx();
	pad2->SetGridy();
	pad3->SetGridx();
	pad3->SetGridy();
	pad1->SetLogx();
	pad2->SetLogx();
	pad3->SetLogx();



	def_beam5->Draw("apl");
   def_beam5->GetYaxis()->SetTitleOffset(0.5);
   def_beam5->GetXaxis()->SetTitleOffset(1.2);
   def_beam5->GetYaxis()->SetTitleSize(0.07);
   def_beam5->GetXaxis()->SetTitleSize(0.09);
   def_beam5->GetYaxis()->SetLabelSize(0.05);
   def_beam5->GetXaxis()->SetLabelSize(0.05);

	// beam_5->Draw("apl");
	//def_5->Draw("apl");

// def_beam5->GetXaxis()->SetTitle("Wavelength   [AA]");
 def_beam5->GetYaxis()->SetTitle("Flux   [n/cm^2/s]");
// def_beam5->SetTitle("Flux at pos1 : (x,y,z) = (197,-18,17) cm");


TLegend* flux = new TLegend(0.58,0.75,0.88,0.88);
flux->AddEntry(def_5,"Baseline","p");
flux->AddEntry(beam_5,"Beam tube, y=-55 cm","p");

flux->SetFillColor(0);
flux->SetLineColor(1);

flux->Draw();

    pad2->cd();
    pad2->SetTopMargin(0.0);
    pad2->SetBottomMargin(0.2);

diff_5->Draw("apl");

 diff_5->GetXaxis()->SetTitle("Energy   [MeV]");
 // diff_5->GetYaxis()->SetTitleOffset(1.);
 // diff_5->GetXaxis()->SetTitleOffset(1.2);
 // diff_5->GetYaxis()->SetTitleSize(0.04);
 // diff_5->GetXaxis()->SetTitleSize(0.09);

 diff_5->GetYaxis()->SetTitleOffset(0.25);
 diff_5->GetXaxis()->SetTitleOffset(1.2);
 diff_5->GetYaxis()->SetTitleSize(0.11);
 diff_5->GetXaxis()->SetTitleSize(0.09);
 diff_5->GetYaxis()->SetLabelSize(0.09);

 /*
 diff_5->GetYaxis()->SetTitleOffset(1.);
 diff_5->GetXaxis()->SetTitleOffset(1.2);
 diff_5->GetYaxis()->SetTitleSize(10.8);
 diff_5->GetXaxis()->SetTitleSize(0.04);
 */

 //   c1->SetLogy();
//   c1->SetLogx();

    pad3->cd();
    pad3->SetTopMargin(0.0);
    pad3->SetBottomMargin(0.2);

 rat_5->Draw("apl");

 rat_5->GetYaxis()->SetTitleOffset(0.25);
 rat_5->GetXaxis()->SetTitleOffset(1.2);
 rat_5->GetYaxis()->SetTitleSize(0.11);
 rat_5->GetXaxis()->SetTitleSize(0.09);
 rat_5->GetYaxis()->SetLabelSize(0.09);

 rat_5->GetXaxis()->SetTitle("Energy   [MeV]");
 // rat_5->GetYaxis()->SetTitleOffset(1.);
 // rat_5->GetXaxis()->SetTitleOffset(1.2);
 // rat_5->GetYaxis()->SetTitleSize(0.04);
 // rat_5->GetXaxis()->SetTitleSize(0.09);





c5->Print("ucn_flux_pos5.eps");
c5->Print("ucn_flux_pos5.png");
c5->Print("ucn_flux_pos5.pdf");

/*
 TCanvas *c1=new TCanvas;
 diff_5->Draw("apl");
 TCanvas *c2=new TCanvas;
 def_5->Draw("apl");
 TCanvas *c3=new TCanvas;
 beam_5->Draw("apl");
 TCanvas *c4=new TCanvas;
def_beam5->Draw("apl");
*/
// TCanvas *c4=new TCanvas;
//rat_5->Draw("apl");

}

void large() {


  Double_t bins25[162] =  { 1.00000E-11, 1.25893E-11, 1.58489E-11, 1.99526E-11, 2.51189E-11, 3.16228E-11, 3.98107E-11, 5.01187E-11, 6.30957E-11, 7.94328E-11, 1.00000E-10, 1.25893E-10, 1.58489E-10, 1.99526E-10, 2.51189E-10, 3.16228E-10, 3.98107E-10, 5.01187E-10, 6.30957E-10, 7.94328E-10, 1.00000E-09, 1.25893E-09, 1.58489E-09, 1.99526E-09, 2.51189E-09, 3.16228E-09, 3.98107E-09, 5.01187E-09, 6.30957E-09, 7.94328E-09, 1.00000E-08, 1.25893E-08, 1.58489E-08, 1.99526E-08, 2.51189E-08, 3.16228E-08, 3.98107E-08, 5.01187E-08, 6.30957E-08, 7.94328E-08, 1.00000E-07, 1.25893E-07, 1.58489E-07, 1.99526E-07, 2.51189E-07, 3.16228E-07, 3.98107E-07, 5.01187E-07, 6.30957E-07, 7.94328E-07, 1.00000E-06, 1.25893E-06, 1.58489E-06, 1.99526E-06, 2.51189E-06, 3.16228E-06, 3.98107E-06, 5.01187E-06, 6.30957E-06, 7.94328E-06, 1.00000E-05, 1.25893E-05, 1.58489E-05, 1.99526E-05, 2.51189E-05, 3.16228E-05, 3.98107E-05, 5.01187E-05, 6.30957E-05, 7.94328E-05, 1.00000E-04, 1.25893E-04, 1.58489E-04, 1.99526E-04, 2.51189E-04, 3.16228E-04, 3.98107E-04, 5.01187E-04, 6.30957E-04, 7.94328E-04, 1.00000E-03, 1.25893E-03, 1.58489E-03, 1.99526E-03, 2.51189E-03, 3.16228E-03, 3.98107E-03, 5.01187E-03, 6.30957E-03, 7.94328E-03, 1.00000E-02, 1.25893E-02, 1.58489E-02, 1.99526E-02, 2.51189E-02, 3.16228E-02, 3.98107E-02, 5.01187E-02, 6.30957E-02, 7.94328E-02, 1.00000E-01, 1.25893E-01, 1.58489E-01, 1.99526E-01, 2.51189E-01, 3.16228E-01, 3.98107E-01, 5.01187E-01, 6.30957E-01, 7.94328E-01, 1.00000E+00, 1.25893E+00, 1.58489E+00, 1.99526E+00, 2.51189E+00, 3.16228E+00, 3.98107E+00, 5.01187E+00, 6.30957E+00, 7.94328E+00, 1.00000E+01, 1.25893E+01, 1.58489E+01, 1.99526E+01, 2.51189E+01, 3.16228E+01, 3.98107E+01, 5.01187E+01, 6.30957E+01, 7.94328E+01, 1.00000E+02, 1.25893E+02, 1.58489E+02, 1.99526E+02, 2.51189E+02, 3.16228E+02, 3.98107E+02, 5.01187E+02, 6.30957E+02, 7.94328E+02, 1.00000E+03, 1.25893E+03, 1.58489E+03, 1.99526E+03, 2.51189E+03, 3.16228E+03, 3.98107E+03, 5.01187E+03, 6.30957E+03, 7.94328E+03, 1.00000E+04, 1.25893E+04, 1.58489E+04, 1.99526E+04, 2.51189E+04, 3.16228E+04, 3.98107E+04, 5.01187E+04, 6.30957E+04, 7.94328E+04, 1.00000E+05};



 Double_t def_25_5[324] = {1.31640E-13, 1.0000, 2.56541E-22, 1.0000, 1.29465E-13, 1.0000, 1.31355E-13, 1.0000, 2.64158E-13, 0.7071, 4.50464E-40, 0.7465, 1.31522E-13, 1.0000, 2.83884E-13, 0.7090, 8.86106E-13, 0.4132, 1.57903E-12, 0.2887, 1.77398E-12, 0.3130, 3.70476E-12, 0.2099, 5.33745E-12, 0.1890, 7.80839E-12, 0.1380, 1.00177E-11, 0.1370, 1.53043E-11, 0.1018, 2.59497E-11, 0.0789, 3.83573E-11, 0.0661, 5.62207E-11, 0.0539, 9.35686E-11, 0.0429, 1.55544E-10, 0.0343, 2.52307E-10, 0.0279, 4.04724E-10, 0.0214, 6.25703E-10, 0.0173, 9.31336E-10, 0.0150, 1.43144E-09, 0.0121, 2.28911E-09, 0.0151, 3.44192E-09, 0.0082, 5.17332E-09, 0.0071, 7.83307E-09, 0.0060, 1.14662E-08, 0.0051, 1.67855E-08, 0.0043, 2.35453E-08, 0.0037, 3.25061E-08, 0.0033, 4.39584E-08, 0.0029, 5.72029E-08, 0.0027, 7.03483E-08, 0.0025, 8.12638E-08, 0.0024, 8.55312E-08, 0.0024, 8.07976E-08, 0.0025, 6.66917E-08, 0.0027, 4.89298E-08, 0.0032, 3.14994E-08, 0.0041, 1.93827E-08, 0.0053, 1.36292E-08, 0.0067, 1.12765E-08, 0.0078, 1.07703E-08, 0.0086, 1.03511E-08, 0.0087, 1.01687E-08, 0.0093, 9.94172E-09, 0.0097, 9.68858E-09, 0.0097, 9.48657E-09, 0.0110, 9.35549E-09, 0.0112, 9.06849E-09, 0.0110, 9.04023E-09, 0.0128, 8.93634E-09, 0.0118, 8.95448E-09, 0.0126, 8.97811E-09, 0.0127, 8.78305E-09, 0.0127, 8.74216E-09, 0.0126, 8.54728E-09, 0.0097, 8.62955E-09, 0.0085, 8.47219E-09, 0.0086, 8.50937E-09, 0.0087, 8.38975E-09, 0.0087, 8.39480E-09, 0.0087, 8.28032E-09, 0.0087, 8.34005E-09, 0.0087, 8.27455E-09, 0.0089, 8.26662E-09, 0.0088, 8.18505E-09, 0.0089, 8.02919E-09, 0.0089, 8.11578E-09, 0.0090, 7.95054E-09, 0.0090, 7.97973E-09, 0.0091, 7.94691E-09, 0.0091, 7.74476E-09, 0.0092, 7.79945E-09, 0.0091, 7.50853E-09, 0.0093, 7.61428E-09, 0.0094, 7.32333E-09, 0.0095, 7.30474E-09, 0.0095, 7.17134E-09, 0.0096, 7.07809E-09, 0.0098, 6.97502E-09, 0.0098, 6.96484E-09, 0.0100, 6.84127E-09, 0.0101, 6.71254E-09, 0.0101, 6.56889E-09, 0.0101, 6.50315E-09, 0.0103, 6.52415E-09, 0.0105, 6.38317E-09, 0.0105, 6.34995E-09, 0.0106, 6.42389E-09, 0.0107, 6.40435E-09, 0.0107, 7.18452E-09, 0.0099, 6.68400E-09, 0.0095, 6.67302E-09, 0.0105, 6.89464E-09, 0.0104, 7.91280E-09, 0.0095, 7.46697E-09, 0.0093, 8.01374E-09, 0.0094, 8.87391E-09, 0.0087, 9.01101E-09, 0.0089, 9.36923E-09, 0.0087, 1.03641E-08, 0.0081, 1.06941E-08, 0.0078, 9.42946E-09, 0.0084, 1.04763E-08, 0.0081, 1.10043E-08, 0.0078, 9.53895E-09, 0.0081, 8.79126E-09, 0.0085, 8.65426E-09, 0.0086, 7.62539E-09, 0.0092, 6.38265E-09, 0.0103, 5.59741E-09, 0.0113, 4.66611E-09, 0.0121, 4.15614E-09, 0.0133, 3.23333E-09, 0.0148, 2.53399E-09, 0.0166, 1.98074E-09, 0.0195, 1.55463E-09, 0.0210, 1.27196E-09, 0.0234, 1.02707E-09, 0.0235, 1.13011E-09, 0.0192, 8.71153E-10, 0.0210, 6.93143E-10, 0.0241, 5.62007E-10, 0.0335, 4.28231E-10, 0.0376, 2.91162E-10, 0.0366, 2.02957E-10, 0.0409, 1.14474E-10, 0.0503, 7.28304E-11, 0.0637, 6.55341E-11, 0.0697, 2.48248E-11, 0.1185, 8.21786E-12, 0.1936, 2.47309E-12, 0.3553, 3.28912E-13, 1.0000, 6.06701E-13, 0.7081, 0.00000E+00, 0.0000, 9.49246E-13, 0.8725, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 5.90424E-13, 0.7074, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000};

 Double_t beam_25_5[324] = {1.30844E-13, 1.0000, 2.56541E-22, 1.0000, 1.61029E-13, 1.0000, 1.30787E-13, 1.0000, 1.54557E-13, 1.0000, 2.61544E-13, 0.7071, 2.62285E-13, 0.7071, 6.15923E-13, 0.5168, 3.92501E-13, 0.5773, 2.88441E-12, 0.2345, 4.51684E-13, 0.5873, 3.27954E-12, 0.2064, 4.49161E-12, 0.1986, 7.04086E-12, 0.1434, 1.04635E-11, 0.1171, 1.58264E-11, 0.0965, 2.20979E-11, 0.1002, 3.59414E-11, 0.0659, 6.30892E-11, 0.0518, 8.27519E-11, 0.0462, 1.45433E-10, 0.0346, 2.53042E-10, 0.0268, 4.12069E-10, 0.0222, 6.17089E-10, 0.0230, 9.10806E-10, 0.0146, 1.41718E-09, 0.0122, 2.21534E-09, 0.0099, 3.39920E-09, 0.0081, 5.10768E-09, 0.0072, 7.58046E-09, 0.0061, 1.12319E-08, 0.0051, 1.65712E-08, 0.0043, 2.33806E-08, 0.0037, 3.21822E-08, 0.0033, 4.35795E-08, 0.0030, 5.64298E-08, 0.0027, 6.97451E-08, 0.0025, 8.06820E-08, 0.0025, 8.48853E-08, 0.0024, 8.02208E-08, 0.0025, 6.66908E-08, 0.0027, 4.81170E-08, 0.0032, 3.12290E-08, 0.0041, 1.91769E-08, 0.0053, 1.38115E-08, 0.0068, 1.13247E-08, 0.0079, 1.05260E-08, 0.0090, 1.04586E-08, 0.0092, 1.01722E-08, 0.0097, 9.93243E-09, 0.0100, 9.65567E-09, 0.0103, 9.59218E-09, 0.0116, 9.35041E-09, 0.0166, 9.20361E-09, 0.0113, 9.05550E-09, 0.0138, 8.82730E-09, 0.0122, 8.99628E-09, 0.0155, 8.75112E-09, 0.0134, 8.67797E-09, 0.0154, 8.87498E-09, 0.0150, 8.85349E-09, 0.0113, 8.61839E-09, 0.0087, 8.67833E-09, 0.0086, 8.57488E-09, 0.0087, 8.45250E-09, 0.0087, 8.31731E-09, 0.0087, 8.40635E-09, 0.0086, 8.35080E-09, 0.0087, 8.35175E-09, 0.0088, 8.29968E-09, 0.0088, 8.23693E-09, 0.0088, 8.09618E-09, 0.0089, 8.06573E-09, 0.0090, 7.93435E-09, 0.0091, 7.84289E-09, 0.0091, 7.79438E-09, 0.0091, 7.63170E-09, 0.0092, 7.63806E-09, 0.0093, 7.51715E-09, 0.0094, 7.51635E-09, 0.0093, 7.25653E-09, 0.0096, 7.35144E-09, 0.0095, 7.17401E-09, 0.0097, 7.08292E-09, 0.0096, 7.04432E-09, 0.0098, 6.83597E-09, 0.0100, 6.67974E-09, 0.0101, 6.68510E-09, 0.0102, 6.59601E-09, 0.0102, 6.31422E-09, 0.0103, 6.44870E-09, 0.0104, 6.32504E-09, 0.0105, 6.24563E-09, 0.0108, 6.34736E-09, 0.0107, 6.34329E-09, 0.0108, 7.15542E-09, 0.0100, 6.52341E-09, 0.0095, 6.69304E-09, 0.0104, 6.91441E-09, 0.0104, 7.90170E-09, 0.0096, 7.42318E-09, 0.0094, 8.05379E-09, 0.0095, 8.83770E-09, 0.0088, 9.03464E-09, 0.0089, 9.35547E-09, 0.0087, 1.03431E-08, 0.0082, 1.06289E-08, 0.0078, 9.28171E-09, 0.0084, 1.03324E-08, 0.0082, 1.07737E-08, 0.0078, 9.49650E-09, 0.0081, 8.72301E-09, 0.0085, 8.57852E-09, 0.0087, 7.63012E-09, 0.0092, 6.40304E-09, 0.0104, 5.53326E-09, 0.0114, 4.61336E-09, 0.0121, 4.19226E-09, 0.0129, 3.31519E-09, 0.0150, 2.59266E-09, 0.0169, 1.89376E-09, 0.0192, 1.58961E-09, 0.0215, 1.27980E-09, 0.0243, 1.04802E-09, 0.0251, 1.14421E-09, 0.0183, 9.07362E-10, 0.0212, 7.10049E-10, 0.0238, 5.72169E-10, 0.0318, 3.99709E-10, 0.0337, 3.05874E-10, 0.0323, 2.05297E-10, 0.0407, 1.24058E-10, 0.0489, 8.18278E-11, 0.0602, 5.47202E-11, 0.0745, 2.83244E-11, 0.1059, 6.80981E-12, 0.2316, 3.96567E-12, 0.2783, 8.15738E-13, 0.5974, 5.82767E-13, 0.7104, 2.64645E-13, 1.0000, 2.53104E-13, 1.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 5.90424E-13, 0.7074, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000, 0.00000E+00, 0.0000}; 

 Double_t def_25_5_v2[324]  = {0};
 Double_t def_25_5_v2e[324] = {0};
 Double_t beam_25_5_v2[324] = {0};
 Double_t beam_25_5_v2e[324]= {0};

 Double_t diff_25_5_v2[162] = {0};
 Double_t diff_25_5_v2e[162]= {0};

 Double_t bins25_v3[162]    = {0};
 Double_t bins25_e[162]     = {0};

 Int_t ii=0;




 
 for (Int_t i=0;i<324;i++) {
   ii += (i%2);
   bins25_v3[ii]=9.0446/sqrt(bins25[ii]*1E9);
   if ((i%2)==0){
     def_25_5_v2[ii]=def_25_5[i];
     beam_25_5_v2[ii]=beam_25_5[i];
     diff_25_5_v2[ii]=def_25_5_v2[ii]-beam_25_5_v2[ii];
   }
   else if ((i%2)!=0) {
     def_25_5_v2e[ii]=def_25_5[i]*def_25_5[i-1];
     beam_25_5_v2e[ii]=beam_25_5[i]*beam_25_5[i-1];
     diff_25_5_v2e[ii]=sqrt(pow( beam_25_5_v2e[ii],2) + pow(def_25_5_v2e[ii],2));
   }
 }
   


   def_5  = new TGraphErrors(102,bins25_v3,def_25_5_v2,bins25_e,def_25_5_v2e);
   beam_5  = new TGraphErrors(102,bins25_v3,beam_25_5_v2,bins25_e,beam_25_5_v2e);
   diff_5  = new TGraphErrors(102,bins25_v3,diff_25_5_v2,bins25_e,diff_25_5_v2e);

   def_5->GetXaxis()->SetTitle("Wavelength   [AA]");
   def_5->GetYaxis()->SetTitle("Flux   [particles/cm^2] (F5 tally)");
   def_5->SetTitle("Flux at pos1 : (x,y,z) = (197,-18,17) cm");
   //def_5->GetYaxis()->SetLabelOffset(0.4);
   //def_5->GetXaxis()->SetLabelSize(0.04);
   def_5->GetYaxis()->SetTitleOffset(1.);
   def_5->GetXaxis()->SetTitleOffset(1.2);
   def_5->GetYaxis()->SetTitleSize(0.04);
   def_5->GetXaxis()->SetTitleSize(0.04);
   def_5->SetLineColor(1);
   def_5->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   def_5->SetMarkerColor(1);
   def_5->SetMarkerSize(0.5);
   //   def_5->SetLineWidth(4.0);

   beam_5->GetXaxis()->SetTitle("Wavelength   [AA]");
   beam_5->GetYaxis()->SetTitle("Flux   [particles/cm^2] (F5 tally)");
   beam_5->SetTitle("Flux at pos1 : (x,y,z) = (197,-18,17) cm");
   //beam_5->GetYaxis()->SetLabelOffset(0.4);
   //beam_5->GetXaxis()->SetLabelSize(0.04);
   beam_5->GetYaxis()->SetTitleOffset(1.);
   beam_5->GetXaxis()->SetTitleOffset(1.2);
   beam_5->GetYaxis()->SetTitleSize(0.04);
   beam_5->GetXaxis()->SetTitleSize(0.04);
   beam_5->SetLineColor(2);
   beam_5->SetMarkerStyle(27);
   beam_5->SetMarkerColor(2);
   beam_5->SetMarkerSize(0.5);
   //   beam_5->SetLineWidth(4.0);



   diff_5->GetXaxis()->SetTitle("Wavelength   [AA]");
   //   diff_5->GetYaxis()->SetTitle("#Delta Flux   [particles/cm^2] (F5 tally)");
   diff_5->GetYaxis()->SetTitle("#Delta Flux");
   diff_5->SetTitle("#Delta Flux");
   //diff_5->GetYaxis()->SetLabelOffset(0.4);
   //diff_5->GetXaxis()->SetLabelSize(0.04);
   diff_5->GetYaxis()->SetLabelSize(1.4);
   diff_5->GetYaxis()->SetTitleOffset(1.);
   diff_5->GetXaxis()->SetTitleOffset(1.2);
   diff_5->GetYaxis()->SetTitleSize(100.8);
   diff_5->GetXaxis()->SetTitleSize(0.04);
   diff_5->SetLineColor(1);
   diff_5->SetMarkerStyle(2); //2 27 33 44 /home/klinkby/projects/Interface/paper2
   diff_5->SetMarkerColor(1);
   diff_5->SetMarkerSize(0.5);


   //   def_5->Draw("apl");
   //   beam_5->Draw("apl");

TMultiGraph *def_beam5 = new TMultiGraph();
def_beam5->Add(def_5);
def_beam5->Add(beam_5);
def_beam5->SetTitle("Flux at pos1 : (x,y,z) = (197,-18,17) cm");

 TCanvas *c5=new TCanvas;
        pad1 = new TPad("pad1","",0,0.3,1,1);
        pad2 = new TPad("pad2","",0,0,1,0.3);
        pad1->Draw();
        pad2->Draw();
        pad1->cd();
        pad1->SetBottomMargin(0.0);
        pad1->SetGridx();
	//        pad1->SetLogy();



def_beam5->Draw("apl");

 def_beam5->GetXaxis()->SetTitle("Wavelength   [AA]");
 def_beam5->GetYaxis()->SetTitle("Flux   [particles/cm^2] (F5 tally)");
 def_beam5->SetTitle("Flux at pos1 : (x,y,z) = (197,-18,17) cm");


TLegend* flux = new TLegend(0.58,0.75,0.88,0.88);
flux->AddEntry(def_5,"Baseline","p");
flux->AddEntry(beam_5,"Beam tube","p");

flux->SetFillColor(0);
flux->SetLineColor(1);

flux->Draw();

    pad2->cd();
    pad2->SetTopMargin(0.0);
    pad2->SetBottomMargin(0.2);

diff_5->Draw("apl");

 diff_5->GetXaxis()->SetTitle("Wavelength   [AA]");
 diff_5->GetYaxis()->SetTitleOffset(1.);
 diff_5->GetXaxis()->SetTitleOffset(1.2);
 diff_5->GetYaxis()->SetTitleSize(0.04);
 diff_5->GetXaxis()->SetTitleSize(0.09);

 //   c1->SetLogy();
//   c1->SetLogx();





c5->Print("ucn_flux_pos5.eps");
c5->Print("ucn_flux_pos5.png");
c5->Print("ucn_flux_pos5.pdf");





}

//Background along guide - MCNP-McStas simulation
// from mcstas02: ~/forPhil/shielding_along_guide/new_attempt/run_mcstas/run_mcnp/read_medium2.o - tally 5 =neutron tally 15=photon

void straight() {
const int nmeas = 6;
 Double_t z[6]       = {300,1000,2000,3000,4000,5000};
 /*low stat*/
 /*
 Double_t neutron[6] = {2.59578E+08,9.78614E+05,6.21780E+03,2.69347E+04,3.42712E+03,8.42232E+03 };
 Double_t neutron_e[6] = {0.0427,0.5236,0.4674,0.4198,0.7070,0.4669};

 Double_t photon[6] = {2.88142E+08, 2.44480E+05,2.28783E+05,4.42806E+05,1.46157E+05,1.56327E+05};
 Double_t photon_e[6] = {0.9284,0.2879,0.2598,0.2638,0.2466,0.3249};
 */
 /*high stat: read_huge8o */
 /*
 Double_t neutron[6] = {2.63976E+08, 7.92424E+05, 2.89057E+04, 1.18802E+05, 8.50103E+03,5.76602E+03 };
 Double_t neutron_e[6] = {0.0224, 0.4059, 0.6330, 0.7982, 0.2342, 0.2772};

 Double_t photon[6] = {1.93530E+07,3.02567E+05,3.29718E+05,4.05200E+05,2.47431E+05,1.52962E+05};
 Double_t photon_e[6] = {0.0222,0.1540,0.1638,0.1361,0.1449,0.1511};
 */

 /*very high stat - large5 - /home/esbe/forPhil/shielding_along_guide/new_attempt/run_mcstas/large/run_mcnp/large/large5.o */
 Double_t neutron[6] = {1.85947E+07, 2.23521E+04,1.04409E+03,2.59020E+02,9.21467E+02,4.44225E+02};
 Double_t neutron_e[6] = {0.0149,0.2523,  0.5324,0.5024,0.7424,0.6929};

 Double_t photon[6] = {1.35578E+06,1.12504E+04,3.46432E+03,2.35598E+03,1.30360E+03,4.30762E+02};
 Double_t photon_e[6] = {0.0151,0.0582,0.0682,0.1687,0.0978,0.1509};





 Double_t neutron_e_scaled[6] = {0};
 Double_t photon_e_scaled[6]  = {0};
 Double_t z_error[6]          = {0};

 //scale errors
   for (Int_t i=0;i<nmeas;i++) {
     neutron_e_scaled[i] = neutron[i]*neutron_e[i];
     photon_e_scaled[i]  =  photon[i]*photon_e[i];
     //     std::cout<< neutron_e_scaled[i] <<" "<<photon_e_scaled[i] <<" "<<z_error[i] <<std::endl;
   }


   //   grneutron = new TGraphErrors(nmeas,z,z_error,neutron,neutron_e_scaled);
   //   grphoton  = new TGraphErrors(nmeas,z,z_error,photon,photon_e_scaled);
   grneutron = new TGraph(nmeas,z,neutron);
   grphoton  = new TGraph(nmeas,z,photon);

grneutron->SetLineColor(2);
grneutron->SetMarkerStyle(22);
grneutron->SetMarkerColor(2);
grneutron->SetMarkerSize(1);
grneutron->SetLineWidth(4.0);

grphoton->SetLineColor(1);
grphoton->SetMarkerStyle(21);
grphoton->SetMarkerColor(1);
grphoton->SetMarkerSize(1);
grphoton->SetLineWidth(4.0);

TMultiGraph *mgDose = new TMultiGraph(); 
mgDose->Add(grneutron);
mgDose->Add(grphoton);


mgDose->Draw("apl");

c1->SetLogy();
c1->SetGridx();
c1->SetGridy();

mgDose->GetXaxis()->SetTitle("Length along z [cm]");
mgDose->GetYaxis()->SetTitle("Dose [#mu Sv/h]");

TLegend* legend_dose = new TLegend(0.58,0.75,0.88,0.88);
legend_dose->AddEntry(grneutron,"Neutron","p");
legend_dose->AddEntry(grphoton,"Photon","p");

legend_dose->SetFillColor(0);
legend_dose->SetLineColor(1);

legend_dose->Draw();

c1->Print("dose_straight_guide.eps");
c1->Print("dose_straight_guide.png");
c1->Print("dose_straight_guide.pdf");

}

void straight_segmented() {
  const int nmeas = 50;
  Double_t z[50] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50};

 /*very high stat  eg.: /home/esbe/forPhil/shielding_along_guide/new_attempt/run_mcstas/large/run_mcnp/large/medium_straight5_revised_det1_5.o + 6 others*/
   // Double_t neutron_e[50] = {0.0149,0.2523,  0.5324,0.5024,0.7424,0.6929};
  //Suspiuous normalization
  //  Double_t neutron[50] = {1.86435E+07,2.81895E+06,7.74991E+05,3.40777E+05,1.56551E+05,9.56986E+04,5.02576E+04,2.07027E+04,1.52761E+04,8.04325E+03,1.13585E+04,5.85637E+03,8.55334E+03,6.31413E+03,6.59429E+03,3.28077E+03,2.85629E+03,2.32423E+03,3.66919E+03,7.17265E+02,9.42107E+03,8.07354E+02,1.77642E+03,1.31928E+03,1.29792E+02,3.16621E+02,2.03291E+02,1.88651E+02,1.41696E+02,2.79506E+02,5.60345E+03,2.63414E+02,2.28810E+02,1.55011E+02,1.66302E+02,6.46371E+03,1.14840E+02,6.08831E+02,1.33470E+03,4.66507E+03,7.12309E+01,1.36524E+02,3.61821E+01,5.17635E+01,3.56486E+01,4.32539E+01,2.79526E+01,3.14309E+02,2.39313E+03,4.07249E+02};

   //Suspiuous normalization
 // Double_t photon_e[50] = {0.0151,0.0582,0.0682,0.1687,0.0978,0.1509};
  //  Double_t photon[50] = {1.35085E+06,2.59350E+05,1.22080E+05,6.40167E+04,2.54910E+04,2.14487E+04,1.22972E+04,1.34930E+04,8.57566E+03,8.49737E+03,7.00905E+03,6.36841E+03,5.50106E+03,5.01789E+03,5.33038E+03,4.19342E+03,4.04461E+03,4.66962E+03,4.05656E+03,2.99712E+03,3.52828E+03,2.76986E+03,2.32954E+03,2.61637E+03,2.27685E+03,2.26922E+03,2.10394E+03,2.28132E+03,2.28205E+03,1.68754E+03,1.94661E+03,1.65347E+03,1.40378E+03,1.52659E+03,1.44599E+03,1.16892E+03,1.91369E+03,1.31166E+03,1.29416E+03,1.00184E+03,1.21772E+03,9.77582E+02,1.20402E+03,8.71395E+02,8.62691E+02,1.02621E+03,9.35044E+02,4.07745E+02,1.80149E+01,4.26082E+00};

  //mcstas02: /scract/.../large_straight_det_sel_1-6_3o
  //nu /scratch-MCNP/background_along_guide/large/run_mcnp/large/large_straight_det_sel_*_4mo
  //NU straight_dbl_chk1_1.o her:/scratch-MCNP/background_along_guide/large/run_mcnp/large/rerun_mcstas/rerun_mcnp
  Double_t neutron[50] = {8.32819E+07,2.34045E+07,6.85155E+06,2.81710E+06,1.45787E+06,7.98082E+05,4.55184E+05,2.97057E+05,2.18541E+05,1.82210E+05,1.09403E+05,1.08742E+05,8.99771E+04,6.94276E+04,5.40985E+04,3.87745E+04,2.22733E+04,3.34848E+04,2.41650E+04,1.91673E+04,2.73142E+04,8.53256E+03,2.76921E+04,1.26953E+04,5.73964E+03,1.23191E+04,6.56423E+03,4.34223E+03,5.15361E+03,1.96478E+04,6.67252E+03,4.42959E+03,6.23260E+03,3.28822E+03,1.96551E+03,3.52519E+03,1.67132E+03,7.25843E+03,5.01869E+03,7.09044E+02,1.87986E+03,7.74474E+02,3.66910E+03,3.66623E+03,2.62152E+03,1.25978E+03,1.87580E+03,4.93959E+02,5.83922E+02,3.36450E+02};
  Double_t neutron_e[50] = {0.0067,0.0130,0.0199,0.0334,0.0419,0.0605,0.0759,0.0889,0.1160,0.1302,0.1288,0.2378,0.1948,0.2297,0.2946,0.1830,0.2455,0.2450,0.3385,0.2167,0.4551,0.2027,0.3231,0.3037,0.2918,0.3709,0.3657,0.3233,0.4511,0.8181,0.4086,0.5327,0.4139,0.49580.3409,0.4717,0.3729,0.8006,0.7094,0.2573,0.6615,0.2859,0.5252,0.5564,0.8436,0.5220,0.5932,0.2856,0.3450,0.5925};

  Double_t photon[55] = {4.81921E+06,1.52860E+06,5.17166E+05,2.98186E+05,1.90141E+05,1.31191E+05,1.13587E+05,9.73218E+04,7.64477E+04,6.82114E+04,6.28851E+04,5.93333E+04,5.84272E+04,4.88997E+04,4.40689E+04,4.11032E+04,3.35314E+04,3.44315E+04,3.26359E+04,2.96681E+04,2.72089E+04,2.69425E+04,2.47878E+04,2.14030E+04,2.11128E+04,2.06369E+04,4.47289E+04,1.93168E+04,1.86168E+04,1.83100E+04,1.59386E+04,1.49777E+04,1.67124E+04,1.36414E+04,1.25397E+04,1.31147E+04,1.38005E+04,1.26087E+04,1.15419E+04,1.11347E+04,1.05508E+04,1.11534E+04,1.02230E+04,9.59078E+03,9.01958E+03,9.28732E+03,9.55893E+03,8.99456E+03,8.39150E+03,3.05800E+03};
  Double_t photon_e[50] = {0.0099,0.0130,0.0498,0.1155,0.1075,0.0415,0.0382,0.0471,0.0253,0.0297,0.0338,0.0367,0.0673,0.0347,0.0297,0.0359,0.0307,0.0310,0.0320,0.0290,0.0357,0.0351,0.0467,0.0320,0.0355,0.0373,0.6020,0.0494,0.0376,0.0558,0.0327,0.0375,0.0902,0.0383,0.0331,0.0596,0.0997,0.0428,0.0451,0.0383,0.0392,0.1325,0.0677,0.0408,0.0452,0.0519,0.0515,0.0526,0.0798,0.0592};

  /*
  Double_t neutron[50] = {1.89472E+08,2.85275E+07,7.35809E+06,3.01528E+06,1.43698E+06,8.05475E+05,5.35018E+05,3.19757E+05,2.17445E+05,1.51530E+05,1.13333E+05,1.33111E+05,8.94448E+04,5.37462E+04,3.36468E+04,3.81355E+04,3.65695E+04,2.21907E+04,1.87646E+04,1.79369E+04,1.43153E+04,1.63362E+04,1.07440E+04,1.10385E+04,2.16736E+04,1.08088E+04,5.80676E+03,8.13572E+03,5.39192E+03,4.12558E+03,2.99570E+03,1.90626E+04,2.50937E+04,2.53004E+03,9.12401E+03,5.03301E+03,1.71559E+03,3.09122E+03,2.78200E+03,2.31168E+03,1.23095E+03,9.12627E+02,1.38387E+03,7.03969E+02,4.22594E+03,3.29191E+03,9.66190E+02,6.62843E+03,9.17090E+03,7.13515E+03};
  Double_t neutron_e[50] = {0.0044,0.0120,0.0224,0.0329,0.0473,0.0641,0.0737,0.0880,0.1045,0.1431,0.1187,0.2772,0.2217,0.1582,0.2265,0.2353,0.2608,0.2246,0.2503,0.2806,0.2330,0.2671,0.2827,0.3084,0.3839,0.3880,0.3816,0.4741,0.4202,0.4057,0.2402,0.9182,0.8433,0.4076,0.7026,0.6379,0.4035,0.3389,0.5273,0.4461,0.3276,0.2566,0.6062,0.2464,0.5818,0.4539,0.5698,0.3733,0.1869,0.1948};

  Double_t photon[55] = {1.41635E+07, 2.53969E+06,1.29555E+06,5.77239E+05,2.62653E+05,1.81805E+05,1.42238E+05,1.15458E+05, 9.69011E+04,8.91518E+04,1.10442E+05,6.67204E+04,5.87616E+04, 5.96487E+04,5.04177E+04,4.93099E+04,4.31394E+04,4.17063E+04,4.43186E+04,3.77317E+04,4.93099E+04,4.31394E+04,4.17063E+04,4.43186E+04,3.77317E+04,3.31549E+04,2.86275E+04,2.71397E+04,2.59798E+04,2.34012E+04,2.22776E+04,2.16816E+04,2.05295E+04,2.05088E+04,1.89306E+04,1.87752E+04,1.71647E+04,1.57399E+04,1.50282E+04,1.47323E+04,1.54546E+04, 1.22008E+04,1.40711E+04,1.24241E+04,1.19921E+04,1.16206E+04,1.09342E+04,1.02271E+04,9.18335E+03,1.01135E+04,9.53843E+03,9.88261E+03,5.16385E+03,6.05897E+02,1.79845E+02};
  Double_t photon_e[50] = {0.0071,0.0145,0.0188,0.0173,0.0256,0.0373,0.0339,0.0274,0.0262,0.0287,0.3150,0.0313,0.0248,0.0289,0.0450,0.0392,0.0310,0.0451,0.1849,0.0571,0.0553,0.0288,0.0327,0.0337,0.0303,0.0374,0.0429,0.0327,0.0401,0.0419,0.0503,0.0450,0.0318};
  */











 Double_t neutron_e_scaled[50] = {0};
 Double_t photon_e_scaled[50]  = {0};
 Double_t z_error[50]          = {0};

 //scale errors
   for (Int_t i=0;i<nmeas;i++) {
          neutron_e_scaled[i] = neutron[i]*neutron_e[i];
          photon_e_scaled[i]  =  photon[i]*photon_e[i];
	  //std::cout<< neutron_e_scaled[i] <<" "<<photon_e_scaled[i] <<" "<<z_error[i] <<std::endl;
	  std::cout<< i<<"  "<<photon[i] <<" "<<photon_e[i] <<" "<<photon_e_scaled[i] <<" "<<z_error[i] <<" "<<z[i]<<std::endl;          

   }


   //   grneutron = new TGraphErrors(nmeas,z,z_error,neutron,neutron_e_scaled);
   //   grphoton  = new TGraphErrors(nmeas,z,z_error,photon,photon_e_scaled);
   //grneutron = new TGraph(nmeas,z,neutron);
   //grphoton  = new TGraph(nmeas,z,photon);
   grneutron = new TGraphErrors(50,z,neutron,z_error,neutron_e_scaled);
   grphoton  = new TGraphErrors(50,z,photon,z_error,photon_e_scaled);

grneutron->SetLineColor(2);
grneutron->SetMarkerStyle(22);
grneutron->SetMarkerColor(2);
grneutron->SetMarkerSize(1);
grneutron->SetLineWidth(4.0);

grphoton->SetLineColor(1);
grphoton->SetMarkerStyle(21);
grphoton->SetMarkerColor(1);
grphoton->SetMarkerSize(1);
grphoton->SetLineWidth(4.0);

TMultiGraph *mgDose = new TMultiGraph(); 
mgDose->Add(grneutron);
mgDose->Add(grphoton);


mgDose->Draw("apl");

c1->SetLogy();
c1->SetGridx();
c1->SetGridy();

mgDose->GetXaxis()->SetTitle("Length along z [m]");
mgDose->GetYaxis()->SetTitle("Dose [#mu Sv/h]");

TLegend* legend_dose = new TLegend(0.58,0.75,0.88,0.88);
legend_dose->AddEntry(grneutron,"Neutron","p");
legend_dose->AddEntry(grphoton,"Photon","p");

legend_dose->SetFillColor(0);
legend_dose->SetLineColor(1);

legend_dose->Draw();

c1->Print("dose_straight_segmented_guide.eps");
c1->Print("dose_straight_segmented_guide.png");
c1->Print("dose_straight_segmented_guide.pdf");

}









void straight_segmented_central() {
  const int nmeas = 6;
  Double_t z[6] = {300,1200,2200,3200,4200,5200};
  
  //mcstas02: /scract/.../large_straight_det_sel_7_3o
  Double_t neutron[6] = {9.58297E+08,1.21174E+06,2.52653E+05,1.01272E+05,5.05090E+04,1.86186E+04};
    
  Double_t photon[6] = {9.76084E+07,8.27406E+05,3.37496E+05,1.79617E+05,1.16166E+05,1.21512E+02};

      
  grneutron = new TGraph(nmeas,z,neutron);
  grphoton  = new TGraph(nmeas,z,photon);

grneutron->SetLineColor(2);
grneutron->SetMarkerStyle(22);
grneutron->SetMarkerColor(2);
grneutron->SetMarkerSize(1);
grneutron->SetLineWidth(4.0);

grphoton->SetLineColor(1);
grphoton->SetMarkerStyle(21);
grphoton->SetMarkerColor(1);
grphoton->SetMarkerSize(1);
grphoton->SetLineWidth(4.0);

TMultiGraph *mgDose = new TMultiGraph(); 
mgDose->Add(grneutron);
mgDose->Add(grphoton);


mgDose->Draw("apl");

c1->SetLogy();
c1->SetGridx();
c1->SetGridy();

mgDose->GetXaxis()->SetTitle("Length along z [cm]");
mgDose->GetYaxis()->SetTitle("Dose [#mu Sv/h]");

TLegend* legend_dose = new TLegend(0.58,0.75,0.88,0.88);
legend_dose->AddEntry(grneutron,"Neutron (in guide)","p");
legend_dose->AddEntry(grphoton,"Photon (in guide)","p");

legend_dose->SetFillColor(0);
legend_dose->SetLineColor(1);

legend_dose->Draw();

c1->Print("dose_straight_within_segmented_guide.eps");
c1->Print("dose_straight_within_segmented_guide.png");
c1->Print("dose_straight_within_segmented_guide.pdf");

}




void curved_segmented_central() {
  const int nmeas = 6;
  Double_t z[6] = {300,1200,2200,3200,4200,5200};
  
  //mcstas02: ~/forPhil/shielding_along_guide/new_attempt/run_mcstas/large_curved/run_mcnp/medium_curved5_revised_det7_8.o
  Double_t neutron[6] = {4.00131E+08,1.97573E+06,1.30594E+05,1.28309E+03,4.01243E+02,7.40974E+02};
    
  Double_t photon[6] = {3.05370E+07,4.94989E+05,6.21163E+03,1.90561E+01,1.54253E-09,3.09201E-03};


      
  grneutron = new TGraph(nmeas,z,neutron);
  grphoton  = new TGraph(nmeas,z,photon);

grneutron->SetLineColor(2);
grneutron->SetMarkerStyle(22);
grneutron->SetMarkerColor(2);
grneutron->SetMarkerSize(1);
grneutron->SetLineWidth(4.0);

grphoton->SetLineColor(1);
grphoton->SetMarkerStyle(21);
grphoton->SetMarkerColor(1);
grphoton->SetMarkerSize(1);
grphoton->SetLineWidth(4.0);

TMultiGraph *mgDose = new TMultiGraph(); 
mgDose->Add(grneutron);
mgDose->Add(grphoton);


mgDose->Draw("apl");

c1->SetLogy();
c1->SetGridx();
c1->SetGridy();

mgDose->GetXaxis()->SetTitle("Length along z [cm]");
mgDose->GetYaxis()->SetTitle("Dose [#mu Sv/h]");

TLegend* legend_dose = new TLegend(0.58,0.75,0.88,0.88);
legend_dose->AddEntry(grneutron,"Neutron (in guide)","p");
legend_dose->AddEntry(grphoton,"Photon (in guide)","p");

legend_dose->SetFillColor(0);
legend_dose->SetLineColor(1);

legend_dose->Draw();

c1->Print("dose_curved_within_segmented_guide.eps");
c1->Print("dose_curved_within_segmented_guide.png");
c1->Print("dose_curved_within_segmented_guide.pdf");

}

















void calc_ellipse() {
  const int steps = 50;
  const Double_t length = 50;
  Double_t z=200.;
  long Double_t y=0.;
  const Double_t delta_z = length / steps;
  for (Int_t i=0; i<steps; i++) {
    
    //y=100.*1500*(1.-cos(atan((z-2)/1500)));
	y=sqrt( pow(150000,2) - pow(z-200,2))-150000;
    
    z+=100.;
    Double_t r=5.0;
    Double_t x=7.0;
      

    ///// std::cout<<" z[m] = "<<z/100<<" y[cm] = "<<y-150000<<std::endl;

    printf("%f  %f  %f  %f\n",x, y, z, r);
    ////    printf("%d ", z);
  

  }
}

void calc_ellipse2() {
  const int steps = 50;
  const Double_t length = 50;
  Double_t z=200.;
  long Double_t y=0.;
  const Double_t delta_z = length / steps;
  for (Int_t i=0; i<steps; i++) {
    
    //y=100.*1500*(1.-cos(atan((z-2)/1500)));
	y=sqrt( pow(200000,2) - pow(z-200,2))-200000;
    
    z+=100.;
    Double_t r=5.0;
    Double_t x=7.0;
      

    ///// std::cout<<" z[m] = "<<z/100<<" y[cm] = "<<y-150000<<std::endl;

    printf("%f  %f  %f  %f\n",x, y, z, r);
    ////    printf("%d ", z);
  

  }
}




void calc_straight() {
  const int steps = 50;
  const Double_t length = 50;
  Double_t z=200.;
  Double_t y=0.;
  const Double_t delta_z = length / steps;
  for (Int_t i=0; i<steps; i++) {
    
    //    y=100.*1500*(1.-cos(atan((z-2)/1500)));
    //    y=sqrt( pow(150000,2) - pow(z-200,2))-150000;
    
    z+=100.;
    Double_t r=5.0;
    Double_t x=7.0;
      

    //    std::cout<<" z[m] = "<<z/100<<" y[cm] = "<<y-150000<<std::endl;

    printf("%f  %f  %f  %f\n",x, y, z, r);
  
  }

}



void curved() {
const int nmeas = 6;
 Double_t z[6]       = {300,1000,2000,3000,4000,5000};
 /*high stat:medium_curved4.o */
 
 Double_t neutron[6] = {1.00655E+08,7.63134E+05,6.95384E+04,3.38511E+03,7.37884E+02,1.03118E+03};
 Double_t neutron_e[6] = {0.0188,0.1360,0.4358,0.3130,0.1963,0.1388};
  
 Double_t photon[6] = {5.96518E+06,1.85208E+05,3.75263E+03,7.97924E+00,2.84793E-04,7.29079E-03};
 Double_t photon_e[6] = {0.0213,0.0682,0.2070,0.7642,0.3732,0.3853};





 Double_t neutron_e_scaled[6] = {0};
 Double_t photon_e_scaled[6]  = {0};
 Double_t z_error[6]          = {0};

 //scale errors
   for (Int_t i=0;i<nmeas;i++) {
     neutron_e_scaled[i] = neutron[i]*neutron_e[i];
     photon_e_scaled[i]  =  photon[i]*photon_e[i];
     //     std::cout<< neutron_e_scaled[i] <<" "<<photon_e_scaled[i] <<" "<<z_error[i] <<std::endl;
   }


   //   grneutron = new TGraphErrors(nmeas,z,z_error,neutron,neutron_e_scaled);
   //   grphoton  = new TGraphErrors(nmeas,z,z_error,photon,photon_e_scaled);
   grneutron = new TGraph(nmeas,z,neutron);
   grphoton  = new TGraph(nmeas,z,photon);

grneutron->SetLineColor(2);
grneutron->SetMarkerStyle(22);
grneutron->SetMarkerColor(2);
grneutron->SetMarkerSize(1);
grneutron->SetLineWidth(4.0);

grphoton->SetLineColor(1);
grphoton->SetMarkerStyle(21);
grphoton->SetMarkerColor(1);
grphoton->SetMarkerSize(1);
grphoton->SetLineWidth(4.0);

TMultiGraph *mgDose = new TMultiGraph(); 
mgDose->Add(grneutron);
mgDose->Add(grphoton);


mgDose->Draw("apl");

c1->SetLogy();
c1->SetGridx();
c1->SetGridy();

mgDose->GetXaxis()->SetTitle("Length along z [cm]");
mgDose->GetYaxis()->SetTitle("Dose [#mu Sv/h]");

TLegend* legend_dose = new TLegend(0.58,0.75,0.88,0.88);
legend_dose->AddEntry(grneutron,"Neutron","p");
legend_dose->AddEntry(grphoton,"Photon","p");

legend_dose->SetFillColor(0);
legend_dose->SetLineColor(1);

legend_dose->Draw();

c1->Print("dose_curved_guide.eps");
c1->Print("dose_curved_guide.png");
c1->Print("dose_curved_guide.pdf");

}




void curved_segmented() {
  const int nmeas = 50;
  
  Double_t z[50] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50};
 /*medium stat:medium_curved5_revised_det*_3.o */
 //i.e. /home/esbe/forPhil/shielding_along_guide/new_attempt/run_mcstas/large_curved/run_mcnp/rssa_save and nps=11992067
  // Double_t neutron[50] = {9.73683E+07,3.70751E+07,1.59078E+07,8.15130E+06,4.26654E+06,2.63447E+06,1.96920E+06,1.00617E+06,1.06437E+06,5.71570E+05,4.36812E+05,6.90342E+05,3.90163E+05,2.60127E+05,1.91619E+05,2.27742E+05,1.49811E+05,1.03927E+05,9.15000E+03,3.55808E+04,9.32490E+03,6.46353E+03,3.65480E+03,1.09121E+04,2.48870E+03,3.54832E+03,1.90376E+03,1.93371E+03,2.05863E+03,1.85761E+03,1.34774E+03,1.89835E+03,1.13861E+03,1.33108E+03,1.39809E+03,9.16874E+02,9.20457E+02,7.75891E+02,1.07079E+03,1.74559E+03,1.32265E+03,1.53868E+03,1.65096E+03,1.39395E+03,1.32942E+03,1.10475E+03,1.16596E+03,1.10225E+03,9.48914E+02,1.18488E+03};
  // Double_t neutron_e[50] = {0.0177,0.0290,0.0472,0.0699,0.0815,0.1115,0.1441,0.1446,0.1427,0.1577,0.2398,0.4468,0.3295,0.2545,0.2646,0.2769,0.2966,0.4141,0.2553,0.4593,0.3098,0.3806,0.2194,0.7500,0.2195,0.2828,0.2201,0.1974,0.1978,0.2285,0.1748,0.2447,0.1579,0.2040,0.1982,0.2035,0.1930,0.2024,0.1705,0.1488,0.1277,0.1494,0.1434,0.1373,0.1353,0.1167,0.1463,0.1448,0.1477,0.1480};
 
  // Double_t photon[50] = {6.10267E+06,1.87608E+06,6.40530E+05,3.78678E+05,2.97608E+05,2.42016E+05,2.33041E+05,1.86931E+05,1.89731E+05,1.72878E+05,1.77379E+05,1.72372E+05,1.33722E+05,8.78296E+04,5.95000E+04,3.55278E+04,1.62668E+04,1.37009E+04,3.49274E+03,2.25823E+03,3.38417E+03,1.17930E+03,7.02637E+02,1.57957E+02,5.69286E+01,1.33311E+02,4.01529E+01,,5.16913E+00,5.29071E+00,8.58001E+00,4.41769E-01,1.81275E-01,5.78791E-02,4.28170E-02 0.3457,1.04258E-02,6.20590E-03,9.63446E-03,5.00137E-04,5.63669E-05,5.94617E-08,3.52082E-04,6.44313E-04,9.07336E-04,1.14367E-03,1.37166E-03,1.58278E-03,1.78403E-03,1.96537E-03,2.13945E-03,2.29417E-03};
 
 // Double_t photon[50] = {6.10267E+06,1.87608E+06,6.40530E+05,3.78678E+05,2.97608E+05,2.42016E+05,2.33041E+05,1.86931E+05,1.89731E+05,1.72878E+05,1.77379E+05,1.72372E+05,1.33722E+05,8.78296E+04,5.95000E+04,4.28170E-02,1.04258E-02,6.20590E-03,9.63446E-03,5.00137E-04,5.63669E-05,5.94617E-08,3.52082E-04,6.44313E-04,9.07336E-04,1.14367E-03,1.37166E-03,1.58278E-03,1.78403E-03,1.96537E-03,2.13945E-03,2.29417E-03,2.29417E-03,4.28170E-02,1.04258E-02,6.20590E-03,9.63446E-03,5.00137E-04,5.63669E-05,5.94617E-08,3.52082E-04,6.44313E-04,9.07336E-04,1.14367E-03,1.37166E-03,1.58278E-03,1.78403E-03,1.96537E-03,2.13945E-03,2.29417E-03};

 //medium_curved5_revised_det*_4.o
  //medium_curved5_revised_det*_9_dblchk.o  her: /scratch-MCNP/background_along_guide/large_curved
  Double_t neutron[50] = {8.27817E+07,2.75071E+07,9.15687E+06,3.89061E+06,2.02942E+06,1.31589E+06,7.19492E+05,5.57224E+05,4.53347E+05,3.36265E+05,2.64406E+05,1.90673E+05,2.08244E+05,1.58994E+05,1.44152E+05,9.76656E+04,9.43809E+04,6.85516E+04,3.64875E+04,4.63208E+04,1.06544E+04,1.32077E+03,6.01916E+02,5.70649E+02,5.08229E+02,5.35940E+02,4.71556E+02,4.45182E+02,4.24985E+02,4.34165E+02,3.73810E+02,3.46696E+02,3.07723E+02,3.11948E+02,2.86856E+02,2.65395E+02,2.43319E+02,2.39487E+02,2.63111E+02,2.42997E+02,2.04436E+02,1.95838E+02,2.02491E+02,1.68044E+02,1.63940E+02,1.67899E+02,1.40693E+02,1.34635E+02,1.34546E+02,3.30806E+01};
  Double_t neutron_e[50] = {0.0066,0.0117,0.0185,0.0244,0.0396,0.0491,0.0565,0.0658,0.0737,0.0905,0.0771,0.0822,0.1086,0.1054,0.1522,0.1138,0.2153,0.1504,0.1878,0.3438,0.3781,0.2771,0.0392,0.0393,0.0474,0.0515,0.0464,0.0494,0.0497,0.0801,0.0543,0.0502,0.0465,0.0582,0.0621,0.0579,0.0541,0.0642,0.0719,0.0612,0.0545,0.0661,0.0750,0.0633,0.0690,0.0726,0.0693,0.0759,0.0636,0.0999};



			  //0.1499,0.1228,0.1402,0.1952,0.2999,0.2140,0.3168,0.3850,0.0931,0.3257,0.2097,0.4670,0.2619,0.7895,0.0871,0.2532,0.1041,0.0932,0.0686,0.0716,0.0697,0.0720,0.0684,0.0676,0.0547,0.0488,0.0491,0.0503,0.0473,0.0491,0.0464,0.0467,0.0464,0.0461,0.0463};

  Double_t photon[50] = {4.45756E+06,1.59886E+06,5.44945E+05,2.74362E+05,1.87626E+05,1.45148E+05,1.06703E+05,9.32524E+04,8.42114E+04,7.39115E+04,6.42752E+04,6.20746E+04,5.24390E+04,5.10852E+04,4.42768E+04,4.17965E+04,4.17390E+04,3.45001E+04,3.30544E+04,2.88249E+04,2.69520E+04,2.43969E+04,2.33627E+04,2.23549E+04,2.08084E+04,1.84306E+04,1.83589E+04,1.76477E+04,1.59258E+04,1.31697E+04,1.53271E+04,1.25942E+04,1.33561E+04,1.18420E+04,1.04180E+04,1.07281E+04,1.09024E+04,1.06486E+04,9.33428E+03,8.28660E+03,8.45603E+03,7.33682E+03,7.62171E+03,7.36127E+03,6.82854E+03,6.01364E+03,6.80611E+03,6.06896E+03,5.79633E+03,2.45105E+03};
  Double_t photon_e[50] = {0.0093,0.0125,0.0402,0.0217,0.0329,0.0388,0.0260,0.0271,0.0303,0.0363,0.0294,0.0308,0.0337,0.0588,0.0647,0.0384,0.1055,0.0335,0.0650,0.0380,0.0390,0.0372,0.0333,0.0460,0.0473,0.0415,0.0394,0.0703,0.0346,0.0404,0.0796,0.0385,0.0510,0.0392,0.0405,0.0475,0.0635,0.1814,0.0628,0.0368,0.0497,0.0423,0.0440,0.0461,0.0655,0.0417,0.0554,0.0702,0.0606,0.1222};

 // Double_t photon_e[50] = {0.0410,0.0493,0.0925,0.0855,0.1294,0.2474,0.1514,0.0959,0.2317,0.2574,0.4102,0.7918,0.3992,0.4571,0.8613,0.2044,0.4551,0.9947,0.3486,0.7971,0.3735,0.6160,0.6684,0.0897,0.9832,0.3989,0.2766,0.2161,0.1812,0.1595,0.1450,0.1353,0.1279,0.1232,0.1194};

     //0.0143,0.0274,0.0203,0.0252,0.0246,0.0228,0.0291,0.0214,0.0243,0.0214,0.0204,0.0274,0.0224,0.0380,0.0361,0.0410,0.0493,0.0925,0.0855,0.1294,0.2474,0.1514,0.0959,0.2317,0.2574,0.4102,0.7918,0.3992,0.4571,0.8613,0.2044,0.4551,0.9947,0.3486,0.7971,0.3735,0.6160,0.6684,0.0897,0.9832,0.3989,0.2766,0.2161,0.1812,0.1595,0.1450,0.1353,0.1279,0.1232,0.1194};

			//			Double_t photon_e[50] = {};





 Double_t neutron_e_scaled[50] = {0};
 Double_t photon_e_scaled[50]  = {0};
 Double_t z_error[50]          = {0};

 //scale errors
   for (Int_t i=0;i<nmeas;i++) {
     neutron_e_scaled[i] = neutron[i]*neutron_e[i];
     photon_e_scaled[i]  =  photon[i]*photon_e[i];
     //neutron_e_scaled[i] =1.;
     //     photon_e_scaled[i]  =1.;
     std::cout<< neutron[i] <<" "<<neutron_e_scaled[i] <<" "<<z[i] <<" "<<z_error[i] <<std::endl;
     //std::cout<< i<<"  "<<photon[i] <<" "<<photon_e[i] <<" "<<photon_e_scaled[i] <<" "<<z_error[i] <<" "<<z[i]<<std::endl;
   }


   grneutron = new TGraphErrors(50,z,neutron,z_error,neutron_e_scaled);
   grphoton  = new TGraphErrors(50,z,photon,z_error,photon_e_scaled);
   //grneutron = new TGraph(nmeas,z,neutron);
   //grphoton  = new TGraph(nmeas,z,photon);

grneutron->SetLineColor(2);
grneutron->SetMarkerStyle(22);
grneutron->SetMarkerColor(2);
grneutron->SetMarkerSize(1);
grneutron->SetLineWidth(4.0);

grphoton->SetLineColor(1);
grphoton->SetMarkerStyle(21);
grphoton->SetMarkerColor(1);
grphoton->SetMarkerSize(1);
grphoton->SetLineWidth(4.0);

TMultiGraph *mgDose = new TMultiGraph(); 
mgDose->Add(grneutron);
mgDose->Add(grphoton);


mgDose->Draw("apl");

c1->SetLogy();
c1->SetGridx();
c1->SetGridy();

mgDose->GetXaxis()->SetTitle("Length along z [m]");
mgDose->GetYaxis()->SetTitle("Dose [#mu Sv/h]");

TLegend* legend_dose = new TLegend(0.58,0.75,0.88,0.88);
legend_dose->AddEntry(grneutron,"Neutron","p");
legend_dose->AddEntry(grphoton,"Photon","p");

legend_dose->SetFillColor(0);
legend_dose->SetLineColor(1);

legend_dose->Draw();

c1->Print("dose_curved_segmented_guide.eps");
c1->Print("dose_curved_segmented_guide.png");
c1->Print("dose_curved_segmented_guide.pdf");

}






//from here EK
void cold_curved_segmented() {
  const int nmeas = 50;
  
  Double_t z[50] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50};
  Double_t neutron[50] = {2.03853E+04,5.58369E+03,1.77953E+04,1.68087E+04,1.22034E+04,1.24362E+04,1.20659E+04,1.04744E+04,1.11461E+04,1.04529E+04,1.00797E+04,9.97883E+03,9.67010E+03,9.01727E+03,8.97328E+03,8.41681E+03,7.95071E+03,7.53620E+03,7.03422E+03,6.84717E+03,6.71984E+03,6.58270E+03,6.30849E+03,6.01271E+03,5.25429E+03,4.97004E+03,4.71938E+03,4.49154E+03,4.49109E+03,4.13668E+03,4.07082E+03,3.79062E+03,3.68974E+03,3.56150E+03,3.38819E+03,3.38749E+03,3.15754E+03,3.12964E+03,2.86645E+03,2.72887E+03,2.60329E+03,2.50907E+03,2.56691E+03,2.34502E+03,2.13827E+03,2.00168E+03,1.74153E+03,1.74461E+03,1.59514E+03,4.67736E+02};
  Double_t neutron_e[50] = {0};
  Double_t photon[50] = { 5.72328E+05 ,1.68714E+05 ,5.10823E+05 ,4.62109E+05 ,3.46810E+05 , 3.47927E+05 ,3.38006E+05 ,3.05981E+05,3.20815E+05 ,3.07236E+05,2.87660E+05 ,2.82411E+05 ,2.91030E+05 ,2.54431E+05 ,2.51401E+05,  2.40807E+05 ,2.22540E+05 ,2.08482E+05 ,2.00665E+05  ,1.95060E+05,1.93590E+05 ,1.89168E+05 ,1.79757E+05 ,1.77141E+05 ,1.58854E+05, 1.46736E+05 ,1.38656E+05 ,1.31478E+05 ,1.31369E+05 ,1.20490E+05,1.22896E+05   , 1.14709E+05 ,   1.13585E+05 , 7.70079E+04    ,7.18954E+04 ,7.18831E+04 ,6.41837E+04 ,6.00620E+04,   1.10560E+05 ,1.02730E+05 ,1.04950E+05 ,1.02397E+05, 9.68979E+04, 9.23008E+04 ,   8.99949E+04 ,8.46353E+04 ,8.57356E+04 ,8.34465E+04,5.97403E+04, 2.22393E+04 };


  Double_t photon_e[50] = {0};

 Double_t neutron_e_scaled[50] = {0};
 Double_t photon_e_scaled[50]  = {0};
 Double_t z_error[50]          = {0};

 //scale errors
   for (Int_t i=0;i<nmeas;i++) {
     neutron_e_scaled[i] = neutron[i]*neutron_e[i];
     photon_e_scaled[i]  =  photon[i]*photon_e[i];
     //neutron_e_scaled[i] =1.;
     //     photon_e_scaled[i]  =1.;
     //std::cout<< neutron[i] <<" "<<neutron_e_scaled[i] <<" "<<z[i] <<" "<<z_error[i] <<std::endl;
     std::cout<< i<<"  "<<photon[i] <<" "<<photon_e[i] <<" "<<photon_e_scaled[i] <<" "<<z_error[i] <<" "<<z[i]<<std::endl;
   }


   grneutron = new TGraphErrors(50,z,neutron,z_error,neutron_e_scaled);
   grphoton  = new TGraphErrors(50,z,photon,z_error,photon_e_scaled);
   //grneutron = new TGraph(nmeas,z,neutron);
   //grphoton  = new TGraph(nmeas,z,photon);

grneutron->SetLineColor(2);
grneutron->SetMarkerStyle(22);
grneutron->SetMarkerColor(2);
grneutron->SetMarkerSize(1);
grneutron->SetLineWidth(4.0);

grphoton->SetLineColor(1);
grphoton->SetMarkerStyle(21);
grphoton->SetMarkerColor(1);
grphoton->SetMarkerSize(1);
grphoton->SetLineWidth(4.0);

TMultiGraph *mgDose = new TMultiGraph(); 
mgDose->Add(grneutron);
mgDose->Add(grphoton);


mgDose->Draw("apl");

c1->SetLogy();
c1->SetGridx();
c1->SetGridy();

mgDose->GetXaxis()->SetTitle("Length along z [m]");
mgDose->GetYaxis()->SetTitle("Dose [#mu Sv/h]");

TLegend* legend_dose = new TLegend(0.58,0.75,0.88,0.88);
legend_dose->AddEntry(grneutron,"Neutron","p");
legend_dose->AddEntry(grphoton,"Photon","p");

legend_dose->SetFillColor(0);
legend_dose->SetLineColor(1);

legend_dose->Draw();

c1->Print("dose_cold_curved_segmented_guide.eps");
c1->Print("dose_cold_curved_segmented_guide.png");
c1->Print("dose_cold_curved_segmented_guide.pdf");

}

//to here EK
















void curved_segmented_r_20000() {
  const int nmeas = 50;
  
  Double_t z[50] = {300,400,500,600,700,800,900,1000,1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,3100,3200,3300,3400,3500,3600,3700,3800,3900,4000,4100,4200,4300,4400,4500,4600,4700,4800,4900,5000,5100,5200};
 //medium_curved5_revised_det*_4.o
  Double_t neutron[50] = {8.00128E+07,2.97646E+07,1.20258E+07,5.76053E+06,3.43075E+06,2.13978E+06,1.42411E+06,9.18723E+05,6.88345E+05,5.54665E+05,4.01958E+05,3.10020E+05,3.12612E+05,2.60588E+05,1.95439E+05,1.42781E+05,1.24674E+05,6.90585E+04,1.09644E+05,4.19142E+04,4.96120E+04,1.70660E+04,1.55410E+04,1.21077E+04,8.89221E+03,3.05394E+03,2.90371E+03,2.47967E+03,6.08502E+03,3.64296E+03,1.71704E+03,1.90119E+03,1.83093E+03,1.59383E+03,2.12411E+03,1.02922E+03,1.03175E+03,8.57872E+02,9.70754E+02,8.89764E+02,1.42410E+03,8.04066E+02,8.18994E+02,7.53821E+02,1.16185E+03,1.15383E+03,1.09094E+03,9.34385E+02,9.19387E+02,8.47975E+02};
  
Double_t neutron_e[50] = {0.0067,0.0105,0.0169,0.0251,0.0367,0.0616,0.0590,0.1084,0.0692,0.1028,0.0836,0.0924,0.0921,0.1064,0.1206,0.1499,0.1228,0.1402,0.1952,0.2999,0.2140,0.3168,0.3850,0.0931,0.3257,0.2097,0.4670,0.2619,0.7895,0.0871,0.2532,0.1041,0.0932,0.0686,0.0716,0.0697,0.0720,0.0684,0.0676,0.0547,0.0488,0.0491,0.0503,0.0473,0.0491,0.0464,0.0467,0.0464,0.0461,0.0463};

 Double_t photon[50] = {4.90328E+06,1.64404E+06,5.36822E+05,2.93737E+05,2.36717E+05,1.96372E+05,1.73254E+05,1.60787E+05,1.55666E+05,1.58362E+05,1.38512E+05,1.29612E+05,1.02281E+05,8.21792E+04,5.18407E+04,2.55945E+04,1.33415E+04,9.27189E+03,5.17072E+03,2.60545E+03,1.66863E+03,8.37979E+02,3.16021E+02,2.47868E+02,1.73631E+02,1.10329E+02,1.98269E+02,1.25546E+01,1.49382E+01,5.73716E+01,4.64398E-01,3.23912E-01,2.61147E+01,7.62633E-02,1.32784E-01,9.49263E-03,3.58002E-03,1.87965E-03,5.27411E-05,6.70305E-05,3.79516E-04,8.10790E-04,1.17970E-03,1.53744E-03,1.88411E-03,2.22574E-03,2.54662E-03,2.86099E-03,3.11393E-03,3.34752E-03};


Double_t photon_e[50] = {0.0143,0.0274,0.0203,0.0252,0.0246,0.0228,0.0291,0.0214,0.0243,0.0214,0.0204,0.0274,0.0224,0.0380,0.0361,0.0410,0.0493,0.0925,0.0855,0.1294,0.2474,0.1514,0.0959,0.2317,0.2574,0.4102,0.7918,0.3992,0.4571,0.8613,0.2044,0.4551,0.9947,0.3486,0.7971,0.3735,0.6160,0.6684,0.0897,0.9832,0.3989,0.2766,0.2161,0.1812,0.1595,0.1450,0.1353,0.1279,0.1232,0.1194};

			//			Double_t photon_e[50] = {};





 Double_t neutron_e_scaled[50] = {0};
 Double_t photon_e_scaled[50]  = {0};
 Double_t z_error[50]          = {10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.,10.};

 //scale errors
   for (Int_t i=0;i<nmeas;i++) {
     neutron_e_scaled[i] = neutron[i]*neutron_e[i];
     photon_e_scaled[i]  =  photon[i]*photon_e[i];
     //neutron_e_scaled[i] =1.;
     //     photon_e_scaled[i]  =1.;
     //std::cout<< neutron[i] <<" "<<neutron_e_scaled[i] <<" "<<z[i] <<" "<<z_error[i] <<std::endl;
     std::cout<< i<<"  "<<photon[i] <<" "<<photon_e[i] <<" "<<photon_e_scaled[i] <<" "<<z_error[i] <<" "<<z[i]<<std::endl;
   }


   grneutron = new TGraphErrors(50,z,neutron,z_error,neutron_e_scaled);
   grphoton  = new TGraphErrors(50,z,photon,z_error,photon_e_scaled);
   //grneutron = new TGraph(nmeas,z,neutron);
   //grphoton  = new TGraph(nmeas,z,photon);

grneutron->SetLineColor(2);
grneutron->SetMarkerStyle(22);
grneutron->SetMarkerColor(2);
grneutron->SetMarkerSize(1);
grneutron->SetLineWidth(4.0);

grphoton->SetLineColor(1);
grphoton->SetMarkerStyle(21);
grphoton->SetMarkerColor(1);
grphoton->SetMarkerSize(1);
grphoton->SetLineWidth(4.0);

TMultiGraph *mgDose = new TMultiGraph(); 
mgDose->Add(grneutron);
mgDose->Add(grphoton);


mgDose->Draw("apl");

c1->SetLogy();
c1->SetGridx();
c1->SetGridy();

mgDose->GetXaxis()->SetTitle("Length along z [cm]");
mgDose->GetYaxis()->SetTitle("Dose [#mu Sv/h]");

TLegend* legend_dose = new TLegend(0.58,0.75,0.88,0.88);
legend_dose->AddEntry(grneutron,"Neutron","p");
legend_dose->AddEntry(grphoton,"Photon","p");

legend_dose->SetFillColor(0);
legend_dose->SetLineColor(1);

legend_dose->Draw();

c1->Print("dose_curved_segmented_guide_r20000.eps");
c1->Print("dose_curved_segmented_guide_r20000.png");
c1->Print("dose_curved_segmented_guide_r20000.pdf");

}




//////////////////////////////PSI BACKGROUND //////////////////////
void backgroundscan() {
   const int nmeas = 26;
    int nplot = 22;
   Double_t D1nguideinE[23] = {1.};
   Double_t D2nguideinE[23] = {1.};
   Double_t D1gguideinE[23] = {1.};
   Double_t D2gguideinE[23] = {1.};
   Double_t yvalsE[23]  = {1.};

  Double_t yvals[23]  = { -105., -205.,  -305. ,-405., -505.,-605.,-655.,-705.,-755.,-805.,-905.,-1005.,-1105.,-1205.,-1305.,-1405.,-1505.,-1605.,-1705.,-1805.,-1905.,-2005.};

  Double_t D1nguidein[23] = { 8.09, 10.1, 11.2, 12.1, 14.7, 21.0, 448.,  639.,   474., 178.,  68.3, 39.6, 23.7, 15.5, 13.8, 12.1, 12.7, 12.2, 10.9, 11.4, 10.9, 11.1, 10.4 };
 Double_t D1gguidein[23] =   { 11.5, 14.0, 14.9, 19.3, 24.1, 28.9, 42.5, 925,   859, 806,   382,  105, 37.2, 30.5, 23.9, 19.8, 17.8, 16.1, 15.6, 14.9, 14.7, 13.7, 13.5};
 Double_t D2nguidein[23] = { 9.93, 9.52, 8.53, 8.85, 9.20, 9.88, 8.19, 8.74, 8.19, 9.06,  9.6, 10.2, 9.91, 9.94, 10.1, 10.3, 10.0, 10.2, 10.3, 10.3, 10.0, 10.0, 10.1};
 Double_t D2gguidein[23] =   { 7.42, 7.10, 6.81, 6.07, 6.80, 6.92, 8.01, 8.15, 8.26, 8.54, 6.83, 7.56, 7.78, 7.04, 7.68, 7.07, 7.45, 8.14, 7.43, 7.65, 7.50, 7.50, 7.80};

 // grD1nguidein = new TGraphErrors(nplot,yvals,yvalsE,D1nguidein,D1nguideinE);
 grD1nguideinNoE = new TGraph(nplot,yvals,D1nguidein);
 grD1gguideinNoE = new TGraph(nplot,yvals,D1gguidein);
 grD2nguideinNoE = new TGraph(nplot,yvals,D2nguidein);
 grD2gguideinNoE = new TGraph(nplot,yvals,D2gguidein);



grD1nguideinNoE->SetLineColor(2);
grD1gguideinNoE->SetLineColor(4);
grD2nguideinNoE->SetLineColor(6);
grD2gguideinNoE->SetLineColor(8);

grD1nguideinNoE->SetMarkerStyle(2);
grD1nguideinNoE->SetMarkerColor(2);
grD1nguideinNoE->SetMarkerSize(1);

grD1gguideinNoE->SetMarkerStyle(27);
grD1gguideinNoE->SetMarkerColor(4);
grD1gguideinNoE->SetMarkerSize(2);


grD2nguideinNoE->SetMarkerStyle(44);
grD2nguideinNoE->SetMarkerColor(6);
grD2nguideinNoE->SetMarkerSize(2);

grD2gguideinNoE->SetMarkerStyle(33);
grD2gguideinNoE->SetMarkerColor(8);
grD2gguideinNoE->SetMarkerSize(2);

grD1nguideinNoE->SetLineWidth(3.0);
grD1gguideinNoE->SetLineWidth(3.0);
grD2nguideinNoE->SetLineWidth(3.0);
grD2gguideinNoE->SetLineWidth(3.0);

 TCanvas *c1=new TCanvas("c1","Radial Doserate");

 // grD1nguideinNoE->Draw("apl");


TMultiGraph *mg = new TMultiGraph(); 
mg->Add(grD1nguideinNoE);
mg->Add(grD1gguideinNoE);
//mg->Add(grD2nguideinNoE);
//mg->Add(grD2gguideinNoE);
mg->SetTitle("Radial Doserate - with guide in beam; Position [mm]; [#muSi/h]");


TLegend* legend_hist = new TLegend(0.18,0.72,0.48,0.88);
legend_hist->AddEntry(grD1nguideinNoE,"Neutron Detector 1","l");
legend_hist->AddEntry(grD1gguideinNoE,"Gamma Detector 1","l");
//legend_hist->AddEntry(grD2nguideinNoE,"Neutron Detector 2","l");
//legend_hist->AddEntry(grD2gguideinNoE,"Gamma Detector 2","l");
legend_hist->SetFillColor(0);
legend_hist->SetLineColor(1);

mg->Draw("apl");
//mg->GetXaxis()->SetLabelOffset(0.04);
//mg->GetYaxis()->SetLabelOffset(0.04);
mg->GetXaxis()->SetLabelSize(0.04);
mg->GetYaxis()->SetLabelSize(0.04);

legend_hist->Draw();

// for (unsigned int iii = 1; iii<10; ++iii) {
//   std::cout<< "cos before " << iii<<" "<<D1nguidein[iii]<<" fdsd "<<D1nguideinE[iii] <<std::endl;
//    }
c1->Print("radial_dose_rate.eps");
//   return c1;
};

void jump() {
  Double_t e[53]  = {0.000000001, 0.00000001, 0.000000025, 0.0000001, 0.0000002, 0.0000005, 0.000001, 0.000002, 0.000005, 0.00001, 0.00002, 0.00005, 0.0001, 0.0002, 0.0005, 0.001, 0.002, 0.005, 0.01, 0.02, 0.03, 0.05, 0.07, 0.1, 0.15, 0.2, 0.3, 0.5, 0.7, 0.9, 1, 1.2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 30, 50, 100, 150, 200, 500};

  Double_t before[53]  = {0.74984, 5.45714, 1.38397, 0.160505, 0.0167929, 0.00016144, 3.29434E-026, 5.11353E-031, 0.000289417, 0.00152913, 0.00132132, 0.0167521, 0.00688184, 0.161472, 0.237578, 0.108787, 0.235097, 0.134475, 0.220281, 1.00188, 0.440245, 1.02097, 2.04876, 4.66427, 3.43377, 5.03995, 13.3821, 26.5511, 37.6901, 37.8465, 13.1028, 21.1199, 104.673, 47.9722, 57.113, 57.9911, 39.0498, 30.7348, 12.417, 20.2572, 15.9689, 16.6959, 20.8756, 12.662, 11.3659, 3.77346, 8.0977, 53.8703, 33.3442, 52.5801, 11.8006, 6.58557, 5.16039};

  Double_t after[53]   = {14.8242, 115.931, 35.5636, 5.83199, 0.21936, 0.0503378, 2.05094E-027, 5.47304E-028, 0.211587, 0.00133689, 0.00135089, 0.0116474, 0.00491626, 0.0767583, 0.0929014, 0.066246, 0.131091, 0.0945389, 0.257624, 0.490254, 0.46906, 0.690173, 1.0238, 2.94663, 2.02187, 5.02501, 12.7562, 37.0873, 39.2927, 28.8683, 16.1885, 17.8452, 87.6133, 87.1973, 76.0936, 50.863, 86.8895, 27.9306, 34.7927, 20.9907, 21.5287, 34.1807, 29.5465, 45.2821, 5.6396, 2.62168, 21.5726, 106.323, 83.9004, 76.0671, 37.4948, 3.75471, 10.077}; 







  Double_t ratio[53];

  //scale errors                                                                                                                       
  for (Int_t i=0;i<53;i++)  {
    ratio[i] = before[i]/after[i];
    std::cout<<i<<" "<<e[i]<<" "<<1./ratio[i]<<std::endl;

  }


   gr = new TGraph(53,e,ratio);
   //grphoton  = new TGraph(nmeas,z,photon);
   /*
grneutron->SetLineColor(2);
grneutron->SetMarkerStyle(22);
grneutron->SetMarkerColor(2);
grneutron->SetMarkerSize(1);
grneutron->SetLineWidth(4.0);

grphoton->SetLineColor(1);
grphoton->SetMarkerStyle(21);
grphoton->SetMarkerColor(1);
grphoton->SetMarkerSize(1);
grphoton->SetLineWidth(4.0);

TMultiGraph *mgDose = new TMultiGraph(); 
mgDose->Add(grneutron);
mgDose->Add(grphoton);

   */
gr->Draw("apl");
   
//c1->SetLogy();
c1->SetGridx();
c1->SetGridy();
/*
mgDose->GetXaxis()->SetTitle("Length along z [cm]");
mgDose->GetYaxis()->SetTitle("Dose [#mu Sv/h]");

TLegend* legend_dose = new TLegend(0.58,0.75,0.88,0.88);
legend_dose->AddEntry(grneutron,"Neutron","p");
legend_dose->AddEntry(grphoton,"Photon","p");

legend_dose->SetFillColor(0);
legend_dose->SetLineColor(1);

legend_dose->Draw();

c1->Print("dose_curved_segmented_guide.eps");
c1->Print("dose_curved_segmented_guide.png");
c1->Print("dose_curved_segmented_guide.pdf");

*/
}


void testme () {
   TCanvas *c1 = new TCanvas("c1","A Simple Graph Example",200,10,700,500);
   Double_t x[100], y[100];
   Int_t n = 20;
   for (Int_t i=0;i<n;i++) {
     x[i] = i*0.1;
     y[i] = 10*sin(x[i]+0.2);
   }
   gr = new TGraph(n,x,y);
   gr->Draw("AC*");
   return c1;

};


Double_t myFunc(Double_t *x, Double_t *par) {
  double ret=0.;
  double eff=0.28 ; //ESS estimate
  if (x[0]>4) ret = (300-x[0])/x[0] /eff ;
  else if( x[0]<=4) ret= (3*70+(4-x[0])/x[0]) /eff;
  //  std::cout<<" out "<<x[0]<<std::endl;
  return ret;
};

void watts_pr_watt () {

  TF1 *fa3 = new TF1("fa3",myFunc,0.0,300.0,0);
 TH1 * h1 = new TH1D(*((TH1D*) fa3->GetHistogram()) );
 h1->SetBinContent(0,750);
 h1->SetBinContent(1,750);
  //  fa3->SetMinimum(20.);
 fa3->SetMarkerSize(10.);
 fa3->SetTitle("Power consumption [W] for heat removal [W]. 28% efficiency");
 // fa3->Set("Power consumption [W] for heat removal [W]. 28% efficiency");

 fa3->GetYaxis()->SetTitle("power consumption [Ws/W]");
 fa3->GetXaxis()->SetTitle("Temperature [K]");
 fa3->Draw("p");
 // c1->Print("watts_per_watt.png");
 
 
 
 // c1->SetLogy();
 // h1->Draw();
 c1->Print("watts_per_watt.png");
 /*
   TF1 *fa1 = new TF1("fa1","(300-x)/x>>h1(000,0,300.0)",4,300);
   TF1 *fa2 = new TF1("fa2","70+(4-x)/x",0,4);
   fa1->Draw();
   //   fa2->Draw();
 */
}
